{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account-module/account.module.ts","webpack:///./src/app/account-module/confirm-email/confirm-email.component.html","webpack:///./src/app/account-module/confirm-email/confirm-email.component.ts","webpack:///./src/app/account-module/forgot-password-form/forgot-password-form.component.html","webpack:///./src/app/account-module/forgot-password-form/forgot-password-form.component.ts","webpack:///./src/app/account-module/login-form/login-form.component.html","webpack:///./src/app/account-module/login-form/login-form.component.ts","webpack:///./src/app/account-module/register-form/register-form.component.html","webpack:///./src/app/account-module/register-form/register-form.component.ts","webpack:///./src/app/account-module/reset-password-form/reset-password-form.component.html","webpack:///./src/app/account-module/reset-password-form/reset-password-form.component.ts","webpack:///./src/app/account-module/send-confirmation-link-form/send-confirmation-link-form.component.html","webpack:///./src/app/account-module/send-confirmation-link-form/send-confirmation-link-form.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/error-page/error-page.component.html","webpack:///./src/app/error-page/error-page.component.ts","webpack:///./src/app/external-module/external.module.ts","webpack:///./src/app/external-module/new-fill-survey/new-fill-survey.component.html","webpack:///./src/app/external-module/new-fill-survey/new-fill-survey.component.ts","webpack:///./src/app/external-module/survey-was-completed/survey-was-completed.component.html","webpack:///./src/app/external-module/survey-was-completed/survey-was-completed.component.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/shared/Models/answer-provided.ts","webpack:///./src/app/shared/Models/answer-type.enum.ts","webpack:///./src/app/shared/Models/question.ts","webpack:///./src/app/shared/Models/survey-results.ts","webpack:///./src/app/shared/Models/survey.ts","webpack:///./src/app/shared/classes/authorization-interceptor.ts","webpack:///./src/app/shared/classes/error-interceptor.ts","webpack:///./src/app/shared/classes/skip-property.ts","webpack:///./src/app/shared/components/doughnut-chart/doughnut-chart.component.html","webpack:///./src/app/shared/components/doughnut-chart/doughnut-chart.component.ts","webpack:///./src/app/shared/components/loader/loader.component.html","webpack:///./src/app/shared/components/loader/loader.component.ts","webpack:///./src/app/shared/components/page-not-found/page-not-found.component.html","webpack:///./src/app/shared/components/page-not-found/page-not-found.component.ts","webpack:///./src/app/shared/components/page-viewer/page-viewer.component.html","webpack:///./src/app/shared/components/page-viewer/page-viewer.component.ts","webpack:///./src/app/shared/directives/auto-resize-text-area.directive.ts","webpack:///./src/app/shared/extensions/array-extensions.ts","webpack:///./src/app/shared/pipes/enum-list.pipe.ts","webpack:///./src/app/shared/services/base.service.ts","webpack:///./src/app/shared/services/component-loader.service.ts","webpack:///./src/app/shared/services/survey.service.ts","webpack:///./src/app/shared/services/user.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/utilities/config.service.ts","webpack:///./src/app/shared/validators/validations-options.ts","webpack:///./src/app/user-module/create-new-survey/create-new-survey.component.html","webpack:///./src/app/user-module/create-new-survey/create-new-survey.component.ts","webpack:///./src/app/user-module/edit-survey/edit-survey.component.html","webpack:///./src/app/user-module/edit-survey/edit-survey.component.ts","webpack:///./src/app/user-module/generate-survey-report/generate-survey-report.component.html","webpack:///./src/app/user-module/generate-survey-report/generate-survey-report.component.ts","webpack:///./src/app/user-module/home/home.component.html","webpack:///./src/app/user-module/home/home.component.ts","webpack:///./src/app/user-module/manage-survey/manage-survey.component.html","webpack:///./src/app/user-module/manage-survey/manage-survey.component.ts","webpack:///./src/app/user-module/root/root.component.html","webpack:///./src/app/user-module/root/root.component.ts","webpack:///./src/app/user-module/send-email-invites/send-email-invites.component.html","webpack:///./src/app/user-module/send-email-invites/send-email-invites.component.ts","webpack:///./src/app/user-module/show-results/show-results.component.html","webpack:///./src/app/user-module/show-results/show-results.component.ts","webpack:///./src/app/user-module/survey-results/survey-results.component.html","webpack:///./src/app/user-module/survey-results/survey-results.component.ts","webpack:///./src/app/user-module/user-surveys/user-surveys.component.html","webpack:///./src/app/user-module/user-surveys/user-surveys.component.ts","webpack:///./src/app/user-module/user.module.ts","webpack:///./src/app/user-panel/change-email/change-email.component.html","webpack:///./src/app/user-panel/change-email/change-email.component.ts","webpack:///./src/app/user-panel/change-password/change-password.component.html","webpack:///./src/app/user-panel/change-password/change-password.component.ts","webpack:///./src/app/user-panel/confirm-email-change/confirm-email-change.component.html","webpack:///./src/app/user-panel/confirm-email-change/confirm-email-change.component.ts","webpack:///./src/app/user-panel/delete-account/delete-account.component.html","webpack:///./src/app/user-panel/delete-account/delete-account.component.ts","webpack:///./src/app/user-panel/home/home.component.html","webpack:///./src/app/user-panel/home/home.component.ts","webpack:///./src/app/user-panel/root/root.component.html","webpack:///./src/app/user-panel/root/root.component.ts","webpack:///./src/app/user-panel/user-panel.module.ts","webpack:///./src/app/user-panel/user-panel.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { routing } from './account.routing';\nimport { ConfirmEmailComponent } from './confirm-email/confirm-email.component';\nimport { ForgotpasswordFormComponent } from './forgot-password-form/forgot-password-form.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { ResetPasswordFormComponent } from './reset-password-form/reset-password-form.component';\nimport { SendConfirmationLinkFormComponent } from './send-confirmation-link-form/send-confirmation-link-form.component';\n\n@NgModule({\n  declarations: [LoginFormComponent, RegisterFormComponent, ConfirmEmailComponent, SendConfirmationLinkFormComponent,\n    ForgotpasswordFormComponent, ResetPasswordFormComponent],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    CommonModule,\n    routing,\n  ],\n  providers: []\n})\n/**\n * Moduł odpowiada za dostarczenie zestawu komponetow\n * ,ktore to sa wykorzystywane do stworzenia wyglady logowania, rejestracji itp..\n * i podstawowa logike ich obslugi\n */\nexport class AccountModule { }\n","<div class=\"outer\">\n    <div class=\"middle\">\n      <div class=\"inner\">\n          <p *ngIf=\"isConfirmed\">\n              Twoj adres email został potwierdzony. Możesz się juz zalogować!.\n            </p>\n            <p *ngIf=\"!isConfirmed && !errors\">\n              Trwa potwierdzanie adreu email.\n            </p>\n            <p *ngIf=\"!isConfirmed && errors\">\n                {{errors}}\n              </p>\n        </div>\n    </div>\n</div>\n","import { Subscription } from 'rxjs/internal/Subscription';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../shared/services/user.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-confirm-email',\n  templateUrl: './confirm-email.component.html',\n  styleUrls: ['./confirm-email.component.css']\n})\n\n/**\n * Komponent słuzy do potwierdzania adresu email uzytkownika\n */\nexport class ConfirmEmailComponent implements OnDestroy {\n  isConfirmed = false;\n  sub: Subscription;\n  errors;\n\n  constructor(private userService: UserService, private router: Router) {\n    // pobiera sciezkie Url w ktorej znajduje sie token do potwierdzenia adresu email\n    this.sub = userService.confirmEmail(router.url).pipe(catchError(userService.handleErrors))\n      .subscribe(\n        res => {\n          if (res) {\n            this.isConfirmed = true;\n          }\n        },\n        errors => this.errors = errors);\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","<div class=\"outer\">\n    <div class=\"middle\">\n      <div class=\"inner\">\n          <ng-container *ngIf=\"!isSent\">\n              <h3>Podaj adres email konta ,którego to nie pamietasz hasła.</h3>\n                <form #f=\"ngForm\" (ngSubmit)=\"sendLink(f)\">\n                    <div class=\"form-group\">\n                      <input id=\"email\" type=\"text\" required name=\"email\" class=\"form-control\" placeholder=\"Email\" [ngModel]=\"userEmail\" #email=\"ngModel\"  validateEmail>\n                      <small [hidden]=\"email.valid || (email.pristine && !submitted)\" class=\"text-danger\">Podaj poprawny email</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <button id=\"send\" type=\"submit\" class=\"btn btn-primary\" [disabled]=\"f.invalid || isRequesting\">Wyslil</button>\n                        <br style=\"clear:both\" />\n                    </div>\n                    <div *ngIf=\"errors\" class=\"alert alert-danger\" role=\"alert\">\n                        <strong>Oops coś poszło nie tak!!</strong> {{errors}}\n                      </div>\n                  </form>\n                </ng-container>\n                <ng-container *ngIf=\"isSent\">\n                  <p>\n                    Wysłano link potwierdzajacy na wskazany adres sprawdz swoja skrzynke pocztowa!\n                  </p>\n                </ng-container>\n      </div>\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserService } from '../../shared/services/user.service';\nimport { finalize } from 'rxjs/internal/operators/finalize';\nimport { catchError } from 'rxjs/internal/operators/catchError';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-forgot-password-form',\n  templateUrl: './forgot-password-form.component.html',\n  styleUrls: ['./forgot-password-form.component.css']\n})\n\n// Komponent ten odpowiada za wysłanie adresu Url na email potrzebnego do zresetowania hasła użytkownika\nexport class ForgotpasswordFormComponent implements OnDestroy {\n  errors: string;\n  isRequesting: boolean;\n  isSent = false;\n  submitted = false;\n  userEmail = '';\n  sub: Subscription;\n\n  constructor(private userService: UserService) { }\n\n  /**\n   * Wyslil link potwierdzjacy\n   */\n  sendLink({ value, valid }: { value: any, valid: boolean }) {\n    this.submitted = true;\n    this.isRequesting = true;\n    this.errors = '';\n\n    // jesli forma jest poprawna\n    if (valid) {\n      this.sub = this.userService.forgotPassword(value.email).pipe(\n        finalize(() => this.isRequesting = false),\n        catchError(this.userService.handleErrors))\n        .subscribe(\n          res => {\n            this.isSent = true;\n          },\n          errors => {\n            this.errors = errors;\n          });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub !== undefined) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","<div class=\"outer\">\n  <div class=\"middle\">\n    <div class=\"inner\">\n        <h2>Witaj użytkowniku zaloguj się na swoje konto.</h2>\n        <form #f=\"ngForm\" (ngSubmit)=\"login(f)\">\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input id=\"email\" type=\"text\" required name=\"email\" class=\"form-control\" placeholder=\"Email\" [ngModel]=\"credentials.email\" #email=\"ngModel\"  validateEmail>\n              <small [hidden]=\"email.valid || (email.pristine && !submitted)\" class=\"text-danger\">Podaj poprawny email</small>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"password\">Hasło</label>\n              <input type=\"password\" class=\"form-control\" id=\"password\" required name=\"password\" placeholder=\"Hasło\" ngModel>\n            </div>\n\n            <div class=\"form-group\">\n                <button id=\"logIn\" type=\"submit\" class=\"btn btn-primary\" [disabled]=\"f.invalid || isRequesting\">Zaloguj</button>\n                <br style=\"clear:both\" />\n            </div>\n\n            <div *ngIf=\"errors\" class=\"alert alert-danger\" role=\"alert\">\n                <strong>Oops coś poszło nie tak!!</strong> {{errors}}\n              </div>\n          </form>\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/sendconfirm\">Nie otrzymałeś linku potwierdzającego email?</a>\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/forgotpassword\">Nie pamiętasz hasła?</a>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserService } from '../../shared/services/user.service';\nimport { Credentials } from '../../shared/Models/credentials';\nimport { Router } from '@angular/router';\nimport { finalize, catchError } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\n/**\n * Komponent odpowiada logowanie uzytkownika do servisu\n */\nexport class LoginFormComponent implements OnDestroy {\n  errors: string;\n  isRequesting: boolean;\n  submitted = false;\n  credentials: Credentials = { email: '', password: '' };\n  sub: Subscription;\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  /**\n   * Wysyła danie logowania do Api\n   */\n  login({ value, valid }: { value: Credentials, valid: boolean }) {\n    this.submitted = true;\n    this.isRequesting = true;\n    this.errors = '';\n    if (valid) {\n      this.sub = this.userService.login(value.email, value.password)\n        .pipe(\n          finalize(() => this.isRequesting = false),\n          catchError(this.userService.handleErrors)\n        )\n        .subscribe(\n          result => {\n            if (result) {\n              // jesli sie udalo przekieruj na strone uzytkownika\n              console.log(this.userService.getAuthorizationToken());\n              this.router.navigate(['/user/home']);\n            }\n          },\n          error => this.errors = error);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub !== undefined) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","<div class=\"outer\">\n    <div class=\"middle\">\n      <div class=\"inner\">\n          <ng-container *ngIf=\"!isRegistered\">\n              <h2>Witaj zajerestruj się w naszym serwisie.</h2>\n                <form #f=\"ngForm\" (ngSubmit)=\"register(f)\">\n                    <div class=\"form-group\">\n                      <label for=\"email\">Email</label>\n                      <input id=\"email\" type=\"text\" required name=\"email\" class=\"form-control\" placeholder=\"Email\" [ngModel]=\"credentials.email\" #email=\"ngModel\" tmFocus validateEmail>\n                      <small [hidden]=\"email.valid || (email.pristine && !submitted)\" class=\"text-danger\">Podaj poprawny email</small>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"password\">Hasło</label>\n                      <input type=\"password\" class=\"form-control\" id=\"password\" required name=\"password\" placeholder=\"Password\" ngModel>\n                    </div>\n\n                    <div class=\"form-group\">\n                      <label for=\"matchpassword\">Potwierdż Hasło</label>\n                      <input type=\"password\" #matchpassword=\"ngModel\" class=\"form-control\" id=\"matchpassword\" required name=\"matchpassword\" placeholder=\"Potwierdż Hasło\" ngModel>\n                      <div class=\"text-danger\" *ngIf=\"passNotEq\">\n                          Hasła nie są sobie rowne.\n                       </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <button id=\"register\" type=\"submit\" class=\"btn btn-primary\" [disabled]=\"f.invalid || isRequesting\">Rejestruj</button>\n                        <br style=\"clear:both\" />\n                    </div>\n\n                    <div *ngIf=\"errors\" class=\"alert alert-danger\" role=\"alert\">\n                        <strong>Oops coś poszło nie tak!!</strong> {{errors}}\n                      </div>\n                  </form>\n                </ng-container>\n                <ng-container *ngIf=\"isRegistered\">\n                  <p>\n                    Twoje konto zostało utworzone. Na twój adres email został wysłany link aktywacyjny twojego konta!\n                  </p>\n                </ng-container>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserService } from '../../shared/services/user.service';\nimport { Router } from '@angular/router';\nimport { Credentials } from '../../shared/Models/credentials';\nimport { finalize } from 'rxjs/internal/operators/finalize';\nimport { catchError } from 'rxjs/internal/operators/catchError';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.css']\n})\n/**\n * Komponent odpowiada za rejestracje uzytkownika w serwisie\n */\nexport class RegisterFormComponent implements OnDestroy {\n  errors: string;\n  isRequesting: boolean;\n  isRegistered = false;\n  submitted = false;\n  credentials: Credentials = { email: '', password: '' };\n  sub: Subscription;\n  passNotEq: boolean;\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  /**\n   * Wyslil dane uzytkownika do rejestracji\n   */\n  register({ value, valid }: { value: any, valid: boolean }) {\n    if (value.password !== value.matchpassword) {\n      this.passNotEq = true;\n      return;\n    } else {\n      this.passNotEq = false;\n    }\n    this.submitted = true;\n    this.isRequesting = true;\n    this.errors = '';\n    if (valid) {\n      this.sub = this.userService.register(value.email, value.password)\n        .pipe(\n          finalize(() => this.isRequesting = false),\n          catchError(this.userService.handleErrors)\n        )\n        .subscribe(\n          result => {\n            if (result) {\n              this.isRegistered = true;\n            }\n          },\n          error => this.errors = error);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub !== undefined) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <ng-container *ngIf=\"!isReseted\">\n      <h2>Zresetuj swoje hasło.</h2>\n        <form #f=\"ngForm\" (ngSubmit)=\"reset(f)\">\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input id=\"email\" type=\"text\" required name=\"email\" class=\"form-control\" placeholder=\"Email\" [ngModel]=\"resetPassword.email\" #email=\"ngModel\" tmFocus validateEmail>\n              <small [hidden]=\"email.valid || (email.pristine && !submitted)\" class=\"text-danger\">Podaj poprawny email</small>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\" class=\"form-control\" id=\"password\" required name=\"password\" placeholder=\"Password\" ngModel>\n            </div>\n\n            <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"f.invalid || isRequesting\">Resetuj</button>\n            </div>\n\n            <div *ngIf=\"errors\" class=\"alert alert-danger\" role=\"alert\">\n                <strong>Oops coś poszło nie tak!!</strong> {{errors}}\n              </div>\n          </form>\n        </ng-container>\n        <ng-container *ngIf=\"isReseted\">\n          <p>\n            Hasło zostało zresetowane. Zaloguj się do swojego konta!\n          </p>\n        </ng-container>\n   </div>\n</div>\n","import { Subscription } from 'rxjs/internal/Subscription';\nimport { ResetPassword } from './../../shared/Models/reset.password';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserService } from '../../shared/services/user.service';\nimport { Router, ActivatedRoute } from '../../../../node_modules/@angular/router';\nimport { finalize } from '../../../../node_modules/rxjs/internal/operators/finalize';\nimport { catchError } from '../../../../node_modules/rxjs/internal/operators/catchError';\nimport { IfStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-reset-password-form',\n  templateUrl: './reset-password-form.component.html',\n  styleUrls: ['./reset-password-form.component.css']\n})\n/**\n * Komponent odpowiada zresetowania hasła użytkownika\n */\nexport class ResetPasswordFormComponent implements OnDestroy {\n  errors: string;\n  isRequesting: boolean;\n  isReseted = false;\n  submitted = false;\n  resetPassword: ResetPassword = { email: '', password: '', code: '' };\n  subs: Array<Subscription> = new Array<Subscription>();\n\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) {\n    // wyciaganie kodu tokena z url (praw ten syf, poprawiony sprawdz czy działa tak dla pewnosci potem)\n    // const index = this.router.url.search('code=');\n    // this.resetPassword.code = this.router.url.substring(index + 5);\n    this.subs.push(this.route.queryParams.subscribe(params => this.resetPassword.code = params.code));\n  }\n\n  /**\n   * Wysle dane do zresetowania hasla wybranego uzytkownika\n   */\n  reset({ value, valid }: { value: ResetPassword, valid: boolean }) {\n    this.submitted = true;\n    this.isRequesting = true;\n    this.errors = '';\n    if (valid) {\n      this.subs.push(this.userService.resetPassword(value.email, value.password, this.resetPassword.code)\n        .pipe(\n          finalize(() => this.isRequesting = false),\n          catchError(this.userService.handleErrors)\n        )\n        .subscribe(\n          result => {\n            if (result) {\n              this.isReseted = true;\n            }\n          },\n          error => this.errors = error));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","<div class=\"outer\">\n    <div class=\"middle\">\n      <div class=\"inner\">\n        <ng-container *ngIf=\"!isSent\">\n          <h4>Podaj adres email na ktory ma zostać wysłany link potwierdzjacy.</h4>\n            <form #f=\"ngForm\" (ngSubmit)=\"sendLink(f)\">\n                <div class=\"form-group\">\n                  <label for=\"email\">Email</label>\n                  <input id=\"email\" type=\"text\" required name=\"email\" class=\"form-control\" placeholder=\"Email\" [ngModel]=\"userEmail\" #email=\"ngModel\"  validateEmail>\n                  <small [hidden]=\"email.valid || (email.pristine && !submitted)\" class=\"text-danger\">Podaj poprawny email</small>\n                </div>\n                <div class=\"form-group\">\n                    <button id=\"send\" type=\"submit\" class=\"btn btn-primary\" [disabled]=\"f.invalid || isRequesting\">Wyslil</button>\n                </div>\n                <div *ngIf=\"errors\" class=\"alert alert-danger\" role=\"alert\">\n                    <strong>Oops coś poszło nie tak!!</strong> {{errors}}\n                  </div>\n              </form>\n            </ng-container>\n            <ng-container *ngIf=\"isSent\">\n              <p>\n                Wysłano link potwierdzajacy na wskazany adres sprawdz swoja skrzynke pocztowa!\n              </p>\n            </ng-container>\n      </div>\n   </div>\n</div>\n","import { Subscription } from 'rxjs/internal/Subscription';\nimport { catchError, finalize } from 'rxjs/operators';\nimport { UserService } from '../../shared/services/user.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-send-confirmation-link-form',\n  templateUrl: './send-confirmation-link-form.component.html',\n  styleUrls: ['./send-confirmation-link-form.component.css']\n})\n\n/**\n * Komponent odpowiada za widok  wysyłajacy link potwierdzajacy adres email\n */\nexport class SendConfirmationLinkFormComponent implements OnDestroy {\n  errors: string;\n  isRequesting: boolean;\n  isSent = false;\n  submitted = false;\n  userEmail = '';\n  sub: Subscription;\n\n  constructor(private userService: UserService) { }\n\n  // wyslil link potwierdzjacy\n  sendLink({ value, valid }: { value: any, valid: boolean }) {\n    this.submitted = true;\n    this.isRequesting = true;\n    this.errors = '';\n\n    if (valid) {\n      this.sub = this.userService.sendEmaiConfirmationLink(value.email).pipe(\n        finalize(() => this.isRequesting = false),\n        catchError(this.userService.handleErrors))\n        .subscribe(\n          res => {\n            this.isSent = true;\n          },\n          errors => {\n            this.errors = errors;\n          });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub !== undefined) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","<!--nagłowek-->\n<app-header></app-header>\n<!--ciało-->\n<div class=\"container-fluid\">\n\t<router-outlet></router-outlet>\n</div>\n<!--stopka-->\n<app-footer></app-footer>\n","import { Component } from '@angular/core';\nimport { UserService } from './shared/services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n// głowny komponent aplikacji ,punkt wejscia\nexport class AppComponent {\n  constructor() { }\n}\n","import { UserPanelModule } from './user-panel/user-panel.module';\nimport { ExternalModule } from './external-module/external.module';\nimport { FooterComponent } from './footer/footer.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { UserModule } from './user-module/user.module';\nimport { AppComponent } from './app.component';\nimport { UserService } from './shared/services/user.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AccountModule } from './account-module/account.module';\nimport { HomeComponent } from './home/home.component';\nimport { Http } from '@angular/http';\nimport { routing } from './app.routing';\nimport { HeaderComponent } from './header/header.component';\nimport './shared/extensions/array-extensions';\nimport { ConfigService } from './shared/utilities/config.service';\nimport { AuthorizationInterceptor } from './shared/classes/authorization-interceptor';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport { ErrorInterceptor } from './shared/classes/error-interceptor';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    ErrorPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AccountModule,\n    routing,\n    UserModule,\n    ExternalModule,\n    UserPanelModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [UserService, Http, ConfigService, { provide: HTTP_INTERCEPTORS, useClass: AuthorizationInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { UserService } from './shared/services/user.service';\n\n/**\n * Służy do weryfikacji czy użytkownik ma uprawnienia do dadej sekcji aplikacji\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private user: UserService, private router: Router) { }\n\n  /**\n   * Werefikuje czy użytkownik jest zalogowany\n   */\n  canActivate() {\n    // sprawdza czy uzytkownik jest zalogowany jesli nie przeniesie do ekranu logowania\n    if (!this.user.isLoggedIn()) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n    return true;\n  }\n}\n","{{error}}\nW BUDOWIE!\n","import { Subscription } from 'rxjs/internal/Subscription';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent implements OnInit, OnDestroy {\n  error: string;\n  sub: Subscription;\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.sub = this.route.queryParams.subscribe(params => this.error = params.errorMessage);\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","import { SharedModule } from './../shared/shared.module';\nimport { routing } from './external.routing';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SurveyWasCompletedComponent } from './survey-was-completed/survey-was-completed.component';\nimport { NewFillSurveyComponent } from './new-fill-survey/new-fill-survey.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    BrowserModule,\n    CommonModule,\n    routing,\n    SharedModule,\n    ReactiveFormsModule\n  ],\n  declarations: [SurveyWasCompletedComponent, NewFillSurveyComponent]\n})\nexport class ExternalModule { }\n","<div class=\"outer\">\n  <div class=\"middle\">\n      <div id=\"survey\" class=\"inner\">\n      <ng-container *ngIf = ' isRequesting && survey !== undefined'>\n          <app-loader></app-loader>\n        </ng-container>\n        <ng-container *ngIf = 'error && survey === undefined'>\n          {{error}}\n        </ng-container>\n        <ng-container *ngIf = '!isRequesting && survey !== undefined ;'>\n           <form [formGroup]=\"fillSurveyForm\" (submit)=\"onSubmit(fillSurveyForm.value)\">\n              <div id = \"survey-header\">\n                  <h3>\n                      {{survey.Name}}\n                  </h3>\n                  <p>{{survey.Description}}</p>\n                </div>\n            <div formArrayName = \"Questions\">\n              <div *ngFor=\"let question of Questions.controls; let questionIndex = index \" [formGroupName]=\"questionIndex\">\n                <div class=\"question-row\">\n                <p>{{ survey.Questions[questionIndex].Query}}</p>\n                <ng-container *ngIf=\"question.get('AnswerType').value === answerTypes.Jednokrotny\">\n                    <div *ngFor=\"let answer of survey.Questions[questionIndex].Answers; let i = index; \">\n                        <label class=\"radio-container\">\n                            <p>{{answer}}</p>\n                            <input  type=\"radio\" formControlName=\"AnswerNumber\" [value]=\"i+1\">\n                            <span class=\"radio-checkmark\"></span>\n                        </label>\n                      </div>\n                      <div class=\"text-danger\" *ngIf=\"question.invalid\">\n                          To pytanie wymaga udzielenia odpowiedzi.\n                        </div>\n                    </ng-container>\n                    <ng-container *ngIf=\"question.get('AnswerType').value === answerTypes.Wielokrotny\">\n                      <div formArrayName = \"CheckBoxes\">\n                          <div *ngFor=\"let checkbox of getCheckboxes(questionIndex).controls ; let j = index; \">\n                              <label class=\"checkbox-container\" >\n                                <p>{{survey.Questions[questionIndex].Answers[j]}}</p>\n                                <input type=\"checkbox\"   formControlName = \"{{j}}\">\n                                <span class=\"checkbox-checkmark\"></span>\n                            </label>\n                            </div>\n                      </div>\n                      <div class=\"text-danger\" *ngIf=\"question.invalid\">\n                          To pytanie wymaga udzielenia odpowiedzi.\n                        </div>\n                    </ng-container>\n                    <ng-container *ngIf=\"question.get('AnswerType').value === answerTypes.Tekstowy\">\n                      <textarea formControlName=\"AnswerResult\" appAutoResizeTextArea charactersPerLine=\"65\" class=\"form-control\" type=\"text\"\n                       maxlength=\"{{maxLengthOfTheAnswer}}\" placeholder='Podaj odpowiedz' rows=\"1\"></textarea>\n                       <div class=\"text-danger\" *ngIf=\"question.invalid\">\n                          To pytanie wymaga udzielenia odpowiedzi.\n                        </div>\n                    </ng-container>\n                  </div>\n              </div>\n            </div>\n            <button id=\"fill-survey\" type=\"submit\" class=\"common-button\" [disabled] = 'isRequesting || fillSurveyForm.invalid'>Wypełnij ankiete</button>\n           </form>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n","import { AnswerProvided } from './../../shared/Models/answer-provided';\nimport { ValidationsOptions } from './../../shared/validators/validations-options';\nimport { Survey } from './../../shared/Models/survey';\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable, Subscription, from } from 'rxjs';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { catchError, finalize } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConfigService } from '../../shared/utilities/config.service';\nimport { UserService } from '../../shared/services/user.service';\nimport { AnswerType } from '../../shared/Models/answer-type.enum';\nimport { SurveyService } from '../../shared/services/survey.service';\n\n@Component({\n  selector: 'app-new-fill-survey',\n  templateUrl: './new-fill-survey.component.html',\n  styleUrls: ['./new-fill-survey.component.css']\n})\nexport class NewFillSurveyComponent implements OnInit {\n\n  answerTypes = AnswerType;\n  fillSurveyForm: FormGroup;\n  isRequesting: boolean;\n  subscriptions: Array<Subscription> = new Array<Subscription>();\n  link: string;\n  survey: Survey;\n  error: string;\n  maxLengthOfTheAnswer = ValidationsOptions.MaxLengthOfTheAnswer;\n\n   get Questions() {\n    return this.fillSurveyForm.get('Questions') as FormArray;\n  }\n\n  constructor(private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder, private surveyService: SurveyService,\n    private configService: ConfigService, private http: HttpClient, private userService: UserService) { }\n\n  ngOnInit() {\n    // pobranie zmiennej z sciezki\n    this.subscriptions.push(this.route.queryParams.subscribe(params => this.link = params.link));\n    // pobranie ankiety\n    this.subscriptions.push(this.surveyService.getSurvey(this.link).pipe(catchError(this.surveyService.handleErrors))\n      .subscribe(res => {\n        this.survey = res as Survey;\n        this.initializeSurvey();\n      }, error => {\n        this.error = error;\n      }));\n  }\n\n  initializeSurvey() {\n    this.fillSurveyForm = this.formBuilder.group({\n      Questions: this.formBuilder.array([])\n    });\n    this.survey.Questions.forEach( question => {\n      const item = this.formBuilder.group({\n        QuestionNumber: question.QuestionNumber,\n        AnswerType: question.AnswerType.valueOf()\n      });\n      switch (question.AnswerType) {\n        case AnswerType.Jednokrotny:\n          item.setControl('AnswerNumber', this.formBuilder.control(''));\n          if ( !question.IsOptional) {\n            item.get('AnswerNumber').setValidators(Validators.required);\n          }\n        break;\n        case AnswerType.Wielokrotny:\n        const controls = [];\n        question.Answers.forEach( answer => {\n          controls.push(this.formBuilder.control(false));\n          });\n          item.setControl('CheckBoxes', this.formBuilder.array(controls));\n          if ( !question.IsOptional) {\n            item.get('CheckBoxes').setValidators(this.validCheckBoxes);\n          }\n        break;\n        case AnswerType.Tekstowy:\n        item.setControl('AnswerResult', this.formBuilder.control(''));\n        if ( !question.IsOptional) {\n          item.get('AnswerResult').setValidators(Validators.required);\n        }\n        break;\n      }\n      this.Questions.push(item);\n    });\n  }\n\n  onSubmit(value: any) {\n    const answersProvided = [];\n    value.Questions.forEach(element => {\n      switch (element.AnswerType) {\n        case AnswerType.Jednokrotny:\n        if ( element.AnswerNumber > 0) {\n          answersProvided.push(element as AnswerProvided);\n        }\n        break;\n        case AnswerType.Wielokrotny:\n          for ( let i = 0; i < element.CheckBoxes.length; i++ ) {\n            if (element.CheckBoxes[i]) {\n              answersProvided.push( new AnswerProvided({\n                AnswerNumber: i + 1,\n                AnswerType: AnswerType.Wielokrotny,\n                QuestionNumber: element.QuestionNumber,\n              }));\n            }\n          }\n        break;\n        case AnswerType.Tekstowy:\n          if ( element.AnswerResult.trim().length > 0 ) {\n            answersProvided.push(element as AnswerProvided);\n          }\n        break;\n      }\n    });\n    this.isRequesting = true;\n    this.subscriptions.push( this.fillSurvey(this.link, JSON.stringify({ AnswersProvided: answersProvided}))\n      .pipe(catchError( this.surveyService.handleErrors), finalize( () => this.isRequesting = false))\n        .subscribe(\n          res => this.router.navigate(['/completed'], { queryParams: { link: this.link } }),\n          error => alert(error)\n        ));\n  }\n\n  fillSurvey(link: string, body: string): Observable<object> {\n    // ustawienie nagłowka, token jest wymaganu do autoryzacji\n    const header = new HttpHeaders({\n      'Content-Type': 'application/json', 'Authorization': this.userService.getAuthorizationToken(),\n      'link': link\n    });\n\n    return this.http.post(this.configService.getApiURI() + '/Survey/FillSurvey', body,\n      { headers: header, observe: 'body', responseType: 'json' });\n  }\n\n  getCheckboxes(index: number) {\n    return this.Questions.at(index).get('CheckBoxes') as FormArray;\n  }\n\n  validCheckBoxes(checkBoxes: FormArray) {\n    let result = false;\n    checkBoxes.value.forEach(element => {\n      if ( element ) {\n        result = true;\n        return;\n      }\n    });\n    return result ? null : { required: true };\n  }\n}\n","<div class=\"outer\">\n  <div class=\"middle\">\n    <div class=\"inner\">\n        <p>\n            Ankieta została wypełniona pomyślnie chcesz ponownie ją wypełnić?\n        </p>\n        <button class=\"common-button\" (click)='fillSurveyAgain()'>Wypełnij ponownie</button>\n    </div>\n  </div>\n</div>\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-survey-was-completed',\n  templateUrl: './survey-was-completed.component.html',\n  styleUrls: ['./survey-was-completed.component.css']\n})\nexport class SurveyWasCompletedComponent implements OnInit {\n  link: string;\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    // pobranie zmiennej z sciezki\n    this.route.queryParams.subscribe(params => this.link = params.link);\n  }\n\n  fillSurveyAgain() {\n    this.router.navigate(['/survey'], { queryParams: { link: this.link } });\n  }\n}\n","<footer class=\"footer\">\n  <div class=\"container\">\n    <span>\n        ©2018 Krzysztof Jezierski Projekt Pracy Inżynierskiej\n    </span>\n    <span>\n      <a data-toggle=\"modal\" data-target=\"#autor\" class=\"nav-link\">Autor</a>\n    </span>\n    <span>\n        <a data-toggle=\"modal\" data-target=\"#contact\" class=\"nav-link\">Kontakt</a>\n    </span>\n  </div>\n</footer>\n\n<!-- Modal o autorze-->\n<div class=\"modal fade\" id=\"autor\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Autor</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>\n            cos o autorze!!!!!!!\n          </p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Zamknij</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Modal kontakt-->\n<div class=\"modal fade\" id=\"contact\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Kontakt</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>\n            jakis kontakt!!!!!!!!!!!\n          </p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Zamknij</button>\n        </div>\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n  constructor() { }\n}\n","<header>\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n    <a class=\"navbar-brand\" href=\"/\">Kajke Ankiety</a>\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n\n        <ul *ngIf=\"status\" class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n               <a class=\"nav-link\" (click)=\"logout()\" href=\"/\">Wyloguj {{userName}}</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/user/home\">Tworzenie Ankiet</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/settings\">Ustawienia Konta</a>\n              </li>\n        </ul>\n\n          <ul *ngIf=\"!status\" class=\"nav navbar-nav\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/register\">Zajerestruj się</a>\n              </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/login\">Zaloguj się</a>\n            </li>\n          </ul>\n    </div>\n  </nav>\n</header>\n","import { UserService } from '../shared/services/user.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit, OnDestroy {\n  status: boolean;\n  userName: string;\n  subscription: Subscription;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    // pobieramy subskrypcje elementu userService ktora komunikue nam czy jestesmy zalagowani\n    // od tego zalezy nasz stan gornego navbara\n    this.subscription = this.userService.authNavStatus$.subscribe(status => {\n      this.status = status;\n      this.userName = this.userService.getUserName();\n    });\n  }\n\n  /**\n   * Wyloguj uzytkownika\n   */\n  logout() {\n    this.userService.logout();\n  }\n\n  ngOnDestroy() {\n    // by nie bylo wycieku pamieci\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2\">\n    <div class=\"sidenav\">\n      <a href=\"#about-project\" class=\"nav-item nav-link\">O projekcie</a>\n      <a href=\"#how-to-use\" class=\"nav-item nav-link\">Jak używać</a>\n      <a href=\"#available options\" class=\"nav-item nav-link\">Dostępne możliwości</a>\n    </div>\n  </div>\n  <div class=\"col py-2\">\n      <section id=\"about-project\">\n        <h3>O projekcie</h3>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris porta suscipit orci quis placerat. Ut est dolor, faucibus nec est eget, eleifend consectetur mi. Aenean vitae est et arcu sagittis maximus. Praesent condimentum, turpis dictum pulvinar dictum, ex elit posuere orci, nec vulputate purus neque at tortor. Integer dapibus, metus ut ultrices tincidunt, dolor sapien porta eros, nec luctus leo diam at elit. Vestibulum suscipit consequat cursus. Aliquam ornare quam tortor, eu bibendum orci consequat sit amet. Morbi volutpat mauris vel congue luctus. Vestibulum non neque dignissim, posuere ipsum non, dictum elit. Sed lobortis magna ac diam pellentesque cursus et at purus. Nunc ut neque vel velit sollicitudin luctus.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris porta suscipit orci quis placerat. Ut est dolor, faucibus nec est eget, eleifend consectetur mi. Aenean vitae est et arcu sagittis maximus. Praesent condimentum, turpis dictum pulvinar dictum, ex elit posuere orci, nec vulputate purus neque at tortor. Integer dapibus, metus ut ultrices tincidunt, dolor sapien porta eros, nec luctus leo diam at elit. Vestibulum suscipit consequat cursus. Aliquam ornare quam tortor, eu bibendum orci consequat sit amet. Morbi volutpat mauris vel congue luctus. Vestibulum non neque dignissim, posuere ipsum non, dictum elit. Sed lobortis magna ac diam pellentesque cursus et at purus. Nunc ut neque vel velit sollicitudin luctus.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris porta suscipit orci quis placerat. Ut est dolor, faucibus nec est eget, eleifend consectetur mi. Aenean vitae est et arcu sagittis maximus. Praesent condimentum, turpis dictum pulvinar dictum, ex elit posuere orci, nec vulputate purus neque at tortor. Integer dapibus, metus ut ultrices tincidunt, dolor sapien porta eros, nec luctus leo diam at elit. Vestibulum suscipit consequat cursus. Aliquam ornare quam tortor, eu bibendum orci consequat sit amet. Morbi volutpat mauris vel congue luctus. Vestibulum non neque dignissim, posuere ipsum non, dictum elit. Sed lobortis magna ac diam pellentesque cursus et at purus. Nunc ut neque vel velit sollicitudin luctus.\n          </p>\n      </section>\n      <section id=\"how-to-use\">\n          <h3>Jak używać</h3>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris porta suscipit orci quis placerat. Ut est dolor, faucibus nec est eget, eleifend consectetur mi. Aenean vitae est et arcu sagittis maximus. Praesent condimentum, turpis dictum pulvinar dictum, ex elit posuere orci, nec vulputate purus neque at tortor. Integer dapibus, metus ut ultrices tincidunt, dolor sapien porta eros, nec luctus leo diam at elit. Vestibulum suscipit consequat cursus. Aliquam ornare quam tortor, eu bibendum orci consequat sit amet. Morbi volutpat mauris vel congue luctus. Vestibulum non neque dignissim, posuere ipsum non, dictum elit. Sed lobortis magna ac diam pellentesque cursus et at purus. Nunc ut neque vel velit sollicitudin luctus.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris porta suscipit orci quis placerat. Ut est dolor, faucibus nec est eget, eleifend consectetur mi. Aenean vitae est et arcu sagittis maximus. Praesent condimentum, turpis dictum pulvinar dictum, ex elit posuere orci, nec vulputate purus neque at tortor. Integer dapibus, metus ut ultrices tincidunt, dolor sapien porta eros, nec luctus leo diam at elit. Vestibulum suscipit consequat cursus. Aliquam ornare quam tortor, eu bibendum orci consequat sit amet. Morbi volutpat mauris vel congue luctus. Vestibulum non neque dignissim, posuere ipsum non, dictum elit. Sed lobortis magna ac diam pellentesque cursus et at purus. Nunc ut neque vel velit sollicitudin luctus.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris porta suscipit orci quis placerat. Ut est dolor, faucibus nec est eget, eleifend consectetur mi. Aenean vitae est et arcu sagittis maximus. Praesent condimentum, turpis dictum pulvinar dictum, ex elit posuere orci, nec vulputate purus neque at tortor. Integer dapibus, metus ut ultrices tincidunt, dolor sapien porta eros, nec luctus leo diam at elit. Vestibulum suscipit consequat cursus. Aliquam ornare quam tortor, eu bibendum orci consequat sit amet. Morbi volutpat mauris vel congue luctus. Vestibulum non neque dignissim, posuere ipsum non, dictum elit. Sed lobortis magna ac diam pellentesque cursus et at purus. Nunc ut neque vel velit sollicitudin luctus.\n        </p>\n      </section>\n      <section id=\"available options\">\n          <h3>Dostepne mozliwosci</h3>\n        <p>\n            Fusce tristique, enim non elementum feugiat, eros neque volutpat massa, nec elementum orci mauris et magna. Cras vitae pretium metus. Nam id est in purus pulvinar luctus vitae molestie leo. Sed ex ligula, vestibulum vitae neque vitae, elementum pharetra diam. Mauris molestie leo mi, nec mollis arcu faucibus et. Phasellus risus lorem, sollicitudin id elit vitae, faucibus interdum velit. Morbi sit amet libero ac diam venenatis bibendum. Vestibulum quis eros ut lacus mattis lobortis. Mauris porttitor varius arcu in ullamcorper. Praesent accumsan ante eu pulvinar tincidunt. Aliquam hendrerit cursus purus. Vestibulum molestie turpis sed pulvinar gravida.\n        </p>\n        <p>\n          Fusce tristique, enim non elementum feugiat, eros neque volutpat massa, nec elementum orci mauris et magna. Cras vitae pretium metus. Nam id est in purus pulvinar luctus vitae molestie leo. Sed ex ligula, vestibulum vitae neque vitae, elementum pharetra diam. Mauris molestie leo mi, nec mollis arcu faucibus et. Phasellus risus lorem, sollicitudin id elit vitae, faucibus interdum velit. Morbi sit amet libero ac diam venenatis bibendum. Vestibulum quis eros ut lacus mattis lobortis. Mauris porttitor varius arcu in ullamcorper. Praesent accumsan ante eu pulvinar tincidunt. Aliquam hendrerit cursus purus. Vestibulum molestie turpis sed pulvinar gravida.\n      </p>\n      <p>\n        Fusce tristique, enim non elementum feugiat, eros neque volutpat massa, nec elementum orci mauris et magna. Cras vitae pretium metus. Nam id est in purus pulvinar luctus vitae molestie leo. Sed ex ligula, vestibulum vitae neque vitae, elementum pharetra diam. Mauris molestie leo mi, nec mollis arcu faucibus et. Phasellus risus lorem, sollicitudin id elit vitae, faucibus interdum velit. Morbi sit amet libero ac diam venenatis bibendum. Vestibulum quis eros ut lacus mattis lobortis. Mauris porttitor varius arcu in ullamcorper. Praesent accumsan ante eu pulvinar tincidunt. Aliquam hendrerit cursus purus. Vestibulum molestie turpis sed pulvinar gravida.\n    </p>\n      </section>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n/**\n * Głowny widok aplikacji przed zalogowaniem\n */\nexport class HomeComponent {\n  constructor() { }\n}\n","import { AnswerType } from './answer-type.enum';\n\nexport class AnswerProvided {\n  public constructor(init?: Partial<AnswerProvided>) {\n    Object.assign(this, init);\n  }\n  AnswerType?: AnswerType;\n  QuestionNumber?: number;\n  AnswerResult: string;\n  AnswerNumber: number;\n}\n","export enum AnswerType {\n  Jednokrotny = 1,\n  Wielokrotny = 2,\n  Tekstowy = 3\n}\n","import { AnswerType } from './answer-type.enum';\n\nexport class Question {\n  public constructor(init?: Partial<Question>) {\n    Object.assign(this, init);\n  }\n  QuestionErrors?: string;\n  Query?: string;\n  QuestionNumber?: number;\n  AnswerType?: AnswerType;\n  Answers?: string[];\n  IsOptional?: boolean;\n}\n","import { AnswerType } from './answer-type.enum';\r\n\r\nexport class SurveyResults {\r\n  results: SurveyResult[];\r\n}\r\n\r\nexport interface SurveyResult {\r\n  answerNumber: number;\r\n  questionNumber: number;\r\n  answerType: AnswerType;\r\n  answerCounter: number;\r\n  answerResults: string[];\r\n}\r\n","import { Question } from './question';\nimport { SkipProperty } from '../classes/skip-property';\n\nexport class Survey {\n  public constructor(init?: Partial<Survey>) {\n    Object.assign(this, init);\n  }\n\n  Name: string;\n  Description: string;\n  HeaderErrors?: string;\n  Questions?: Question[];\n\n  /**\n   * Zwraca obiekt klasy serializowany do JSON\n   */\n  toJSON(): string {\n    // nowa kolekcja pytan ktora nie bedzie posiadala pola questionErrors, poniewaz nie ma potrzeby serializacji tego pola\n    const questions = [];\n    for (const item of this.Questions) {\n      questions.push(SkipProperty.skipKeys(item, ['questionErrors']));\n    }\n    // nowy obiekt ktory zawiera tylko te pola ktore maja zostac serializowane do json\n    const obj = {\n      name: this.Name,\n      description: this.Description,\n      questions: questions\n    };\n    return JSON.stringify(obj);\n  }\n}\n","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport { UserService } from '../services/user.service';\n\n/**\n * Przchwytuje ządania http i sprawdza czy zostały poprawnie autoryzowane na serwerze api\n */\n@Injectable()\nexport class AuthorizationInterceptor implements HttpInterceptor {\n  constructor(private userService: UserService, private route: Router) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).do(event => { }, err => {\n      // jesli żądanie nie zostało autoryzowane wyloguj uzytkownika( wiekoszosci przypadkow token wygasł a jesli użytkownik\n      // probuje cos obejśc jego problem ze go wylogowało) i przekieruj na strone logowania\n      if (err instanceof HttpErrorResponse && err.status === 401) {\n        console.log('Nie autoryzowany dostęp. Nastapi przekierowanie na strone logowania');\n        this.userService.logout();\n        this.route.navigate(['login']);\n      }\n    });\n  }\n}\n","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\n\n/**\n * Przchwytuje ządania http i obsługuje statusy błedow\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private route: Router) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).do(event => { }, err => {\n      if (err instanceof HttpErrorResponse) {\n        switch (err.status) {\n          case 0: {\n            this.navigateToErrorPage('Daj jakas waidomosc ze padl serwer lub nie ma neta na zas');\n            break;\n          }\n        }\n      }\n    });\n  }\n\n  private navigateToErrorPage(errorMessage: string) {\n    this.route.navigate(['error'], { queryParams: { errorMessage: errorMessage } });\n  }\n}\n","export abstract class SkipProperty {\n  /**\n  * Zwraca obiekt ktory nie zawiera pol i method zawartych w tablicy keys\n  * @param obj Obiekt na ktorym chcesz przeprowadzic operacje\n  * @param keys Lista własciwości, ktore maja zostać pominiete\n  * @returns Nowy obiekt, ktory zawiera wyłacznie elementy nie zawarte w tablicy keys\n  */\n  public static skipKeys(obj: any, keys: string[]): object {\n    const item = {};\n    for (const key in obj) {\n      if (keys.indexOf(key) === -1) {\n        item[key] = obj[key];\n      }\n    }\n    return item;\n  }\n}\n","<div class=\"doughnut-chart\">\n  <h4>{{title}}</h4>\n  <div id=\"legend\">\n    <ng-container *ngFor=\" let item of doughnutChartLabels; let i = index\">\n      <p>{{i + 1}}. {{item}}</p>\n    </ng-container>\n  </div>\n  <canvas baseChart\n              [data]=\"doughnutChartData\"\n              [options]=\"options\"\n              [labels]=\"formattedLabels\"\n              [chartType]=\"doughnutChartType\"\n              (chartHover)=\"chartHovered($event)\"\n              (chartClick)=\"chartClicked($event)\"></canvas>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Chart } from 'chart.js';\n\n@Component({\n  selector: 'app-doughnut-chart',\n  templateUrl: './doughnut-chart.component.html',\n  styleUrls: ['./doughnut-chart.component.css']\n})\nexport class DoughnutChartComponent implements OnInit {\n  @Input()\n  doughnutChartLabels: string[];\n  @Input()\n  doughnutChartData: number[];\n  @Input()\n  title: string;\n  formattedLabels: string[];\n  public doughnutChartType = 'doughnut';\n  options: any;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.options = {\n      legend: {\n        display: false,\n        labels: {\n          fontSize: 14\n        }\n      },\n    };\n    this.formattedLabels = this.formatLabels(this.doughnutChartLabels);\n    // this.doughnutChartLabels.forEach( label => {\n    //   this.formattedLabels.push(this.formatLabel(label, this.maxLabelSize));\n    // });\n  }\n\n  public chartClicked(e: any): void {\n    console.log(e);\n  }\n\n  public chartHovered(e: any): void {\n    console.log(e);\n  }\n\n  formatLabels(labels: string[]) {\n    const result = [];\n    for (let i = 0; i < labels.length; i++) {\n      result.push((i + 1) + ' ' + labels[i].substring(0, 70) + '.... ');\n    }\n    return result;\n  }\n  /**\n   * Dzieli za długie etykiety na mniejsze\n   * @param label etykieta\n   * @param maxwidth maksymalna długosc etykiety\n   */\n  // formatLabel(label: string, maxwidth: number): string[] {\n  //   const words = label.split(' ');\n  //   let result = [];\n  //   let currentLine = '';\n\n  //   words.forEach( word => {\n  //     // sprawdz czy nie trzeba łamać słowa\n  //     if (word.length > maxwidth) {\n  //       const tmp = result.concat(this.breakWord(currentLine + word, maxwidth));\n  //       result = tmp;\n  //       currentLine = result.last();\n  //       return;\n  //     }\n  //     if ((currentLine.length + word.length) <= maxwidth) {\n  //       currentLine += word;\n  //     } else {\n  //       result.push(currentLine);\n  //       currentLine = '';\n  //     }\n  //   });\n  //   if ( currentLine.trim().length > 0) {\n  //      result.push(currentLine);\n  //   }\n  //   return result;\n  // }\n  // breakWord(word: string, maxwidth: number ): string[] {\n  //   const result = [];\n  //   const lines = Math.floor(word.length / maxwidth);\n  //   const lastLineSize = word.length % maxwidth;\n  //     for (let i = 0; i < lines; i++) {\n  //       result.push(word.substring(i * maxwidth, (i + 1) * maxwidth ));\n  //     }\n  //     if (lastLineSize !== 0) {\n  //       result.push(word.substring(lines * maxwidth, (lines * maxwidth) + lastLineSize));\n  //     }\n  //     return result;\n  // }\n}\n","<div class=\"loader\"></div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","<p>\n  page-not-found works! xDDD\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"rich-list\">\n  <div class=\"rich-list-header\">\n    <h3>{{title}}</h3>\n    <select class=\"form-control\" [(ngModel)]=\"listElementsPerPage\"  (ngModelChange)=\"listElementsPerPage=$event;\" (change) = \"onSelectChange()\">\n      <option [value]=\"5\">5</option>\n      <option [value]=\"10\">10</option>\n      <option [value]=\"15\">15</option>\n      <option [value]=\"25\">25</option>\n      <option [value]=\"50\">50</option>\n  </select>\n  <br style=\" clear: both;\">\n  </div>\n  <div class=\"rich-list-body\">\n    <ul *ngFor=\"let item of currentListElements\">\n      <li>{{item}}</li>\n    </ul>\n  </div>\n  <div class=\"rich-list-bottom\">\n    <button class=\"common-button\" (click)=\" firstPage()\"> &#171; </button> <!-- pierwsza strona -->\n    <button class=\"common-button\" (click)=\" previousPage()\">&#8249;</button> <!-- porzednia strona -->\n    <input (change)=\"onInputChange()\" size=\"1\" type=\"number\" min=\"1\" [(ngModel)]=\"currentPage\">\n    <strong> /{{maxPageCounter}}</strong>\n    <button class=\"common-button\" (click)=\"nextPage()\">&#8250;</button> <!-- nastepna strona -->\n    <button class=\"common-button\" (click)=\" lastPage()\">&raquo;</button> <!-- ostatnia strona -->\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-page-viewer',\n  templateUrl: './page-viewer.component.html',\n  styleUrls: ['./page-viewer.component.css']\n})\nexport class PageViewerComponent implements OnInit {\n  @Input()\n  listElements: string[];\n  @Input()\n  title: string;\n  currentListElements: string[];\n  currentPage: number;\n  maxPageCounter: number;\n  listElementsPerPage = 5;\n  remainder: number;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.initialize();\n    this.setPage();\n    console.log(this.listElements);\n  }\n\n  nextPage() {\n    if (this.currentPage !== this.maxPageCounter) {\n      this.currentPage++;\n      if (this.currentPage === this.maxPageCounter) {\n        this.lastPage();\n      } else {\n        this.setPage();\n      }\n    }\n  }\n\n  previousPage() {\n    if (this.currentPage !== 1) {\n      this.currentPage--;\n      if (this.currentPage === 1) {\n        this.firstPage();\n      } else {\n        this.setPage();\n      }\n    }\n  }\n\n  lastPage() {\n    this.currentPage = this.maxPageCounter;\n    const index = (this.maxPageCounter - 1) * this.listElementsPerPage;\n    this.currentListElements = this.listElements.slice(index, index + this.remainder);\n  }\n\n  firstPage() {\n    this.currentPage = 1;\n    this.currentListElements = this.listElements.slice(this.currentPage - 1, this.listElementsPerPage);\n  }\n\n  onInputChange() {\n    if (this.currentPage <= 0) {\n      this.firstPage();\n    } else if (this.currentPage >= this.maxPageCounter) {\n      this.lastPage();\n    } else {\n      this.setPage();\n    }\n  }\n\n  setPage() {\n    const index = (this.currentPage - 1) * this.listElementsPerPage;\n    this.currentListElements = this.listElements.slice(index, index + this.listElementsPerPage);\n  }\n\n  onSelectChange() {\n    this.initialize();\n    this.setPage();\n  }\n\n  initialize() {\n    this.currentPage = 1;\n    // sprawdz ile bedzie stron uzyskaj wyganae dane\n    this.remainder = this.listElements.length % this.listElementsPerPage;\n    if (this.remainder === 0) {\n      this.maxPageCounter = this.listElements.length / this.listElementsPerPage;\n    } else {\n      this.maxPageCounter = Math.floor(this.listElements.length / this.listElementsPerPage) + 1;\n    }\n  }\n}\n","import { Directive, Input, ElementRef, AfterContentChecked, AfterContentInit } from '@angular/core';\n\n@Directive({\n  selector: '[appAutoResizeTextArea]'\n})\nexport class AutoResizeTextAreaDirective implements AfterContentChecked {\n\n  @Input()\n  charactersPerLine: number;\n\n  constructor(private el: ElementRef) {\n    this.el.nativeElement.rows = 1;\n  }\n\n  // @HostListener('input')\n  // onInput() {\n  //   this.el.nativeElement.rows = Math.floor(this.el.nativeElement.value.length / this.charactersPerLine) + 1;\n  // }\n\n  ngAfterContentChecked(): void {\n    this.el.nativeElement.rows = Math.floor(this.el.nativeElement.value.length / this.charactersPerLine) + 1;\n  }\n}\n","declare global {\n  interface Array<T> {\n    /**\n     * Zwroci ostatni element tablicy\n     */\n    last(): T;\n  }\n}\n\nArray.prototype.last = function () {\n  return this[this.length - 1];\n};\n\nexport { };\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'enumKeyValuelist'\n})\n\nexport class EnumKeyValueListPipe implements PipeTransform {\n  transform(value: any, args: any[]): any {\n    const items = [];\n    for (const key in value) {\n      if (!this.isValueProperty(key)) { continue; }\n      items.push({ key: key, value: value[key] });\n    }\n    return items;\n  }\n\n  private isValueProperty = (key: string) => parseInt(key, 10) >= 0;\n}\n","import { throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n/**\n * Podstawa dla usług ktore beda musialy obslugiwac bledy zwrocone z serwera\n */\nexport abstract class BaseService {\n  constructor() { }\n\n  /**\n   *  Metoda sluzy do wyłuskania błedow i ich zwrocenia\n   */\n  handleErrors(error: any): any {\n    // jesli blad serwera przeleci wszystki tablice z bledami i obrobi do jedno stringa\n    let errorModel = '';\n    for (const key in error.error) {\n      if (error.error.hasOwnProperty(key)) {\n        errorModel += error.error[key].toString() + ' \\n ';\n      }\n    }\n    return throwError(errorModel);\n  }\n}\n","import { ComponentFactoryResolver, Injectable, ViewContainerRef, Type, ComponentRef } from '@angular/core';\n\n/**\n * Usługa ktora słuzy do dynamiczego generowania i dodawania komponetow angulara do wybranego kontenera\n */\n@Injectable()\nexport class ComponentLoaderService {\n  rootViewContainer: ViewContainerRef;\n\n  constructor(private factoryResolver: ComponentFactoryResolver) { }\n\n  /**\n   * Ustaw kontener do ktorego bedziesz dodawaj i usuwal komponenty\n   * @param viewContainerRef\n   */\n  setRootViewContainerRef(viewContainerRef): void {\n    this.rootViewContainer = viewContainerRef;\n  }\n\n  /**\n   * Dodaje konpoment do wybranego kontenera\n   * @param componentType Typ komponetu ktory ma zostać dodany\n   * @param inputs Lista wartosci klucz-wartosc ,ktore maja zostać powiaze z zmiennymi komponetu.\n   */\n  addChild<T>(componentType: Type<T>, inputs?: { [key: string]: any; }): ComponentRef<T> {\n    const factory = this.factoryResolver.resolveComponentFactory(componentType);\n    const component = factory.create(this.rootViewContainer.parentInjector);\n\n    // sprawdz czy komponent posiada taka własciwosc i została ona zdefiniowa w inputs , ustaw jej wartosc po kluczu z inputs\n    if (inputs) {\n      for (const key in component.instance) {\n        if (component.instance.hasOwnProperty(key) && inputs.hasOwnProperty(key)) {\n          component.instance[key] = inputs[key];\n        }\n      }\n    }\n\n    this.rootViewContainer.insert(component.hostView);\n    return component;\n  }\n\n  /**\n   * Usun ostatni element z kontenera\n   */\n  removeLastChild(): void {\n    this.rootViewContainer.remove(this.rootViewContainer.length - 1);\n  }\n  /**\n   * Usun wybrany element z kontenera\n   */\n  removeChildAt(value: number): void {\n    this.rootViewContainer.remove(value);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { finalize } from 'rxjs/operators';\nimport { BaseService } from './base.service';\nimport { ConfigService } from '../utilities/config.service';\nimport { UserService } from './user.service';\nimport { Survey } from '../Models/survey';\nimport { SurveyResults } from '../Models/survey-results';\n\n/**\n * Usługa ktora dostarcza mozliwosc komunikacji dla komponentow ankiety z api\n */\n@Injectable()\nexport class SurveyService extends BaseService {\n  private baseUrl = '';\n\n  private isRequestingSource: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  /**\n   * Observable ktory ma komunikowac czy jest się w trakcie żadania to api ankiety\n   */\n  public isRequestingObservable: Observable<boolean> = this.isRequestingSource.asObservable();\n  // do monitorowania tego czy zmienila sie strukyitra ankiety\n  // zmiana tresci pytania lib odpowiedzi nie wpływa na to\n  private surveyWasEditedSource: Subject<void> = new Subject();\n  public surveyWasEditedObservable = this.surveyWasEditedSource.asObservable();\n\n  constructor(private configService: ConfigService, private userService: UserService, private http: HttpClient) {\n    super();\n    this.baseUrl = configService.getApiURI() + '/Survey';\n  }\n\n  /**\n   * Utworz ankiete w serwisie\n   * @param body Model ankiety w formacie json\n   */\n  createSurvey(body: string): Observable<boolean> {\n    // ustawienie nagłowka, token jest wymaganu do autoryzacji\n    const header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.userService.getAuthorizationToken() });\n\n    this.isRequestingSource.next(true);\n\n    return this.http.post(this.baseUrl + '/CreateSurvey', body,\n      { headers: header, observe: 'body', responseType: 'json' })\n      .pipe(\n        finalize(() => this.isRequestingSource.next(false)),\n        map((res => true)));\n  }\n\n  /**\n   * Pobiera ankiety uzytkownika z api\n   */\n  getUserSurveys(): Observable<Array<{ name: string, link: string }>> {\n    // ustawienie nagłowka, token jest wymaganu do autoryzacji\n    const header = new HttpHeaders({ 'Authorization': this.userService.getAuthorizationToken() });\n    this.isRequestingSource.next(true);\n\n    return this.http.get(this.baseUrl + '/GetUserSurveys', { headers: header, responseType: 'json' })\n      .pipe(finalize(() => this.isRequestingSource.next(false)),\n        map(res => res as Array<{ name: string, link: string }>));\n  }\n\n  /**\n   * Usuwa ankiete uzytkownika z serwisu\n   * @param link wygenerowany identyfikator ankiety do odsyłacza\n   */\n  remoweSurvey(link: string): Observable<boolean> {\n    const header = new HttpHeaders({ 'Link': link, 'Authorization': this.userService.getAuthorizationToken() });\n    this.isRequestingSource.next(true);\n\n    return this.http.delete(this.baseUrl + '/DeleteSurvey', { headers: header, observe: 'body', responseType: 'json' })\n      .pipe(finalize(() => this.isRequestingSource.next(false)),\n        map(res => true));\n  }\n\n  /**\n   * Pobierz wybrana ankiete\n   * @param link identyfikator ankiety\n   */\n  getSurvey(link: string): Observable<Survey> {\n    const header = new HttpHeaders({ 'Authorization': this.userService.getAuthorizationToken() });\n    this.isRequestingSource.next(true);\n\n    return this.http.get(this.baseUrl + '/GetSurvey?link=' + link,\n      { headers: header, responseType: 'json' }).pipe(finalize(() => this.isRequestingSource.next(false)),\n        map(res => Object.setPrototypeOf(res, new Survey)\n        ));\n  }\n\n  /**\n   * Edytuj ankiete w serwisie\n   * @param body Model ankiety w formacie json\n   */\n  editSurvey(link: string, body: string, structureWasChanged: boolean) {\n    // ustawienie nagłowka, token jest wymaganu do autoryzacji\n\n    const header = new HttpHeaders({\n      'Content-Type': 'application/json', 'Authorization': this.userService.getAuthorizationToken(),\n      'link': link, 'structureWasChanged': JSON.stringify(structureWasChanged)\n    });\n\n    this.isRequestingSource.next(true);\n\n    return this.http.post(this.baseUrl + '/EditSurvey', body,\n      { headers: header, observe: 'body', responseType: 'json' })\n      .pipe(\n        finalize(() => this.isRequestingSource.next(false)),\n        map((res => true)));\n  }\n\n  /**\n   * Wyślij zaproszenia email do ankiety\n   * @param emails Lista adresow email\n   * @param link  Indentyfikator ankiety\n   */\n  sendEmailsInvites(emails: string[], link: string) {\n    // ustawienie nagłowka, token jest wymaganu do autoryzacji\n    const header = new HttpHeaders({\n      'Content-Type': 'application/json', 'Authorization': this.userService.getAuthorizationToken(),\n      'link': link\n    });\n    const body = JSON.stringify({ Emails: emails });\n\n    // this.isRequestingSource.next(true);\n    return this.http.post(this.baseUrl + '/SendEmailsInvites', body,\n      { headers: header, observe: 'body', responseType: 'json' })\n      .pipe(\n        // finalize(() => this.isRequestingSource.next(false)),\n        map((res => true)));\n  }\n\n  /**\n   * Pobierz wyniki ankiety\n   * @param link identyfakator ankiety\n   */\n  getSurveyResults(link: string): Observable<SurveyResults> {\n    const header = new HttpHeaders({ 'Authorization': this.userService.getAuthorizationToken() });\n    this.isRequestingSource.next(true);\n\n    return this.http.get(this.baseUrl + '/GetSurveyResults?link=' + link,\n      { headers: header, responseType: 'json' }).pipe(finalize(() => this.isRequestingSource.next(false)),\n        map(res => Object.setPrototypeOf(res, new SurveyResults)\n        ));\n  }\n}\n","import { Observable } from 'rxjs/Observable';\nimport { BaseService } from './base.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ConfigService } from '../utilities/config.service';\nimport { map } from 'rxjs/operators';\n\n/**\n * Usługa ktora odpowiada za obsługe systemu logowania i rejestracji uytkownika\n */\n@Injectable()\nexport class UserService extends BaseService {\n  private baseUrl = '';\n\n  // komunikuje czy jestesmy zalogowani lub nie przydaje sie do odswierzania zawartosci głownego navbar\n  private _authNavStatusSource = new BehaviorSubject<boolean>(false);\n  authNavStatus$ = this._authNavStatusSource.asObservable();\n\n  private loggedIn = false;\n\n  constructor(private http: HttpClient, private configService: ConfigService) {\n    super();\n    // jesli nie ma tokenu uzytkownik nie jest zalogowany\n    this.loggedIn = !!localStorage.getItem('auth_token');\n    // przekaz czy uzytkownik jest zalogowany\n    this._authNavStatusSource.next(this.loggedIn);\n    this.baseUrl = configService.getApiURI();\n  }\n\n  /**\n   * Loguje uzytkownika do serwisu. Jeśli operacja sie powiedzie zostanie otzymany tokem JWT.\n   * @param email Email uzytkownika\n   * @param password Hasło użytkownika\n   */\n  login(email, password): Observable<boolean> {\n    // ustaw naglowek\n    const header = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    return this.http\n      .post<CredentialsResponse>(\n        this.baseUrl + '/accounts/login',\n        JSON.stringify({ email, password }), { headers: header, observe: 'body', responseType: 'json' }\n      ).pipe(\n        map((res => {\n          // jesli sie udalo zapisac token, ustawic ze zalogowano\n          localStorage.setItem('auth_token', res.auth_token);\n          localStorage.setItem('user_name', res.user_name);\n          this.loggedIn = true;\n          this._authNavStatusSource.next(true);\n          return true;\n        })));\n  }\n\n  // rejestracja konta uzytkownika w serwisie\n  /**\n   * Wysle dane uzytkownika do serwisu w celu utowrzenia nowego konta\n   * @param email Email uzytkownika\n   * @param password Hasło użytkownika\n   */\n  register(email, password): Observable<boolean> {\n    // ustaw naglowek\n    const header = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    return this.http\n      .post(\n        this.baseUrl + '/accounts/register',\n        JSON.stringify({ email, password }), { headers: header, observe: 'body', responseType: 'json' }\n      ).pipe(\n        map((res => true)));\n  }\n\n  // wysyła link potwierdzajacy email do api serwera by obsluzolo to\n  /**\n   *  Wysyła link potwierdzajacy email do api serwera by obsluzylo go i potwierdzilo adres email\n   * @param url Adres Url ktory zawiera wygenerowany token do potwierdzenia adresu email\n   */\n  confirmEmail(url: string): Observable<boolean> {\n    return this.http.get(this.baseUrl + '/accounts' + url).pipe(map((res => true)));\n  }\n\n  /**\n   * Wysle email uzytkownika do api aby to wygenerowało link to powierdzenia i wyslago go na ten email\n   * @param email Email uzytkownika\n   */\n  sendEmaiConfirmationLink(email: string): Observable<boolean> {\n    return this.http.get(this.baseUrl + '/accounts/SendAgainEmailConfirmation?email=' + email).pipe(map((res => true)));\n  }\n\n  /**\n   * Wysle wskazany email do api aby na niego przyszedl link do zresetowania hasła\n   * @param email Email uzytkownika\n   */\n  forgotPassword(email: string): Observable<boolean> {\n    return this.http.get(this.baseUrl + '/accounts/forgotpassword?email=' + email).pipe(map((res => true)));\n  }\n\n  /**\n   * Wysle wskazane dane do api aby to zresetowalo hasło\n   * @param email Email uzytkownika\n   * @param password Haslo uzytkownika\n   * @param code kod tokena do zresetowania hasła\n   */\n  resetPassword(email, password, code): Observable<boolean> {\n    // ustaw naglowek\n    const header = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    return this.http\n      .post(\n        this.baseUrl + '/accounts/resetpassword',\n        JSON.stringify({ email, password, code }), { headers: header, observe: 'body', responseType: 'json' }\n      ).pipe(\n        map((res => true)));\n  }\n\n  /**\n   * Wyloguj uzytkownika\n   */\n  logout(): void {\n    // usun token i oznacz ze nie jest zalogowany\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('user_name');\n    this.loggedIn = false;\n    this._authNavStatusSource.next(false);\n  }\n\n  /**\n   * Zwraca czy jakis uzytkownik jest zalogowany\n   */\n  isLoggedIn(): boolean {\n    return this.loggedIn;\n  }\n\n  /**\n   * Zwraca nazwa bierzacego użytkownika\n   */\n  getUserName(): string {\n    return localStorage.getItem('user_name');\n  }\n\n  getAuthorizationToken(): string {\n    return 'Bearer ' + localStorage.getItem('auth_token');\n  }\n\n  /**\n   * Sprawdza czy token autoryzcji jest ciagle ważny\n   * Jesli nie jest to przeniesie sie aplicka na strone logowania\n   */\n  IsAuthorized() {\n    // ustawienie nagłowka, token jest wymaganu do autoryzacji\n    const header = new HttpHeaders({ 'Authorization': this.getAuthorizationToken() });\n\n    return this.http.get(this.baseUrl + '/Survey/IsAuthorized',\n      { headers: header, observe: 'body', responseType: 'json' }).pipe(\n        map((res => true)));\n  }\n}\n\n// do mapowania z json odpowiedzi logowania z serwera do zmiany na zas\ninterface CredentialsResponse {\n  auth_token: string;\n  user_name: string;\n}\n","import { AutoResizeTextAreaDirective } from './directives/auto-resize-text-area.directive';\nimport { FormsModule } from '@angular/forms';\nimport { EnumKeyValueListPipe } from './pipes/enum-list.pipe';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { PasswordMatchValidatorDirective } from './directives/password-match-validator.directive';\nimport { ChartsModule } from 'ng2-charts';\nimport { DoughnutChartComponent } from './components/doughnut-chart/doughnut-chart.component';\nimport { PageViewerComponent } from './components/page-viewer/page-viewer.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ChartsModule,\n    FormsModule,\n    MatButtonModule,\n    MatChipsModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  declarations: [EnumKeyValueListPipe, LoaderComponent, PasswordMatchValidatorDirective, DoughnutChartComponent, PageViewerComponent,\n    AutoResizeTextAreaDirective,\n    PageNotFoundComponent],\n  exports: [MatButtonModule, MatChipsModule, MatInputModule, MatIconModule, PageNotFoundComponent,\n    EnumKeyValueListPipe, LoaderComponent, DoughnutChartComponent, PageViewerComponent, AutoResizeTextAreaDirective]\n})\n/**\n * Moduł ktory udastepnia elementy wspoldzielone\n */\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Ustawienia aplikacji\n */\nexport class ConfigService {\n  private apiURI: string;\n  private apUri: string;\n\n  // tu ustawiasz bazowa ciezki do api przeneis potem do json czy cos po bedzie tragedi jesli nie\n  constructor() {\n    this.apiURI = 'https://localhost:44321/api';\n    this.apUri = 'localhost:4200';\n  }\n\n  getApURI() {\n    return this.apUri;\n  }\n  getApiURI(): string {\n    return this.apiURI;\n  }\n}\n","/**\n * Klasa ktora przechowuje reguły walidacji danych\n */\nexport class ValidationsOptions {\n  /**\n   * Maksymalna długość odpowiedzi na pytanie tekstowe w ankciecie\n   */\n  public static MaxLengthOfTheAnswer = 300;\n  /**\n   * Maksymalna długość nazwy ankiety\n   */\n  public static SurveyNameMmaxLength = 160;\n  /**\n   * Maksymalna długość opisu ankiety\n   */\n  public static SurveyDescriptionMmaxLength = 1500;\n  /**\n  * Maksymalna długość pytania ankiety\n  */\n  public static SurveyQuestionMmaxLength = 400;\n  /**\n   * Minimalna długośc hasła\n  */\n  public static RequiredPasswordLength = 6;\n}\n","<div class=\"row\">\n    <div clas=\"col-sm-8 col-xl-12\">\n        <div class=\"floating-menu\">\n            <div  class=\"floating-menu-header\">\n              <p>Przybornik</p>\n            </div>\n            <div  class=\"floating-menu-body\">\n                <button title=\"Dodaj pytanie.\" class=\"basic-icon-button add-button\" (click) ='addQuestion()' [disabled] = 'isRequesting' ></button>\n                <button title=\"Usuń pytanie.\"class=\"basic-icon-button cancel-button\" (click) ='remoweQuestion()' [disabled] = 'isRequesting'></button>\n                <div>\n                    <button class=\"common-button\" (click) ='onSubmit()' [disabled] = 'surveyForm.invalid || isRequesting' *ngIf='!editingMode' >Utworz ankiete</button>\n                    <button class=\"common-button\" (click) ='onSubmit()' [disabled] = 'surveyForm.invalid || isRequesting'  *ngIf='editingMode'>Edytuj ankiete</button>\n                </div>\n            </div>\n          </div>\n      <form [formGroup]=\"surveyForm\">\n          <div id=\"header\">\n              <div class=\"header-record form-group \">\n                  <label for=\"name\">Nazwa Ankiety:</label>\n                  <textarea maxlength=\"{{surveyNameMmaxLength}}\" appAutoResizeTextArea charactersPerLine=\"52\" class=\"form-control form-control-lg\"\n                  id=\"name\" type=\"text\" placeholder=\"Podaj nazwe ankiety\" formControlName=\"Name\" ></textarea>\n                  <small class=\"text-danger\" *ngIf=\"Name.invalid && Name.touched\" >Nazwa ankiety nie może pozostać pusta.</small>\n                </div>\n                <div class=\"header-record form-group\">\n                  <label for=\"description\">Opis ankiety:</label>\n                  <textarea maxlength=\"{{surveyDescriptionMmaxLength}}\" appAutoResizeTextArea charactersPerLine=\"52\" class=\"form-control form-control-lg\"\n                  id=\"description\" type=\"text\" placeholder=\"Podaj opis ankiety\" formControlName=\"Description\" ></textarea>\n                  <small class=\"text-danger\" *ngIf=\"Description.invalid && Description.touched\" >Opis ankiety nie może pozostać pusty.</small>\n                </div>\n          </div>\n          <div formArrayName = \"Questions\">\n              <div *ngFor=\"let question of Questions.controls; let i = index \" [formGroupName]=\"i\">\n                  <div class=\"survey-row\">\n                    <button title=\"Usuń pytanie.\"  class=\"basic-icon-button cancel-button delete\" [disabled]=\"isRequesting\" (click)=\"remoweQuestionAt(i)\"></button>\n                         <div class=\"form-group \">\n                            <label for=\"question\">Pytanie {{i + 1}}: </label>\n                            <textarea maxlength=\"{{surveyQuestionMmaxLength}}\" appAutoResizeTextArea charactersPerLine=\"52\" class=\"form-control form-control-lg\"\n                            formControlName=\"Query\" type=\"text\" placeholder=\"Podaj treść pytania\"  ></textarea>\n                            <small class=\"text-danger\" *ngIf=\"question.get('Query').invalid && question.get('Query').touched\" >Pytanie ankiety nie może pozostać puste.</small>\n                          </div>\n                          <div class=\"form-group \">\n                              <label for=\"answer-type\">Typ odpowiedzi</label>\n                              <select formControlName=\"AnswerType\" class=\"custom-select\" id=\"answer-type\" (change) = \"onSelectChange(question)\">\n                                <option *ngFor=\"let item of options | enumKeyValuelist;\" [ngValue]=\"item.key\">Typ wyboru: {{item.value}}</option>\n                              </select>\n                              <small  class=\"form-text text-muted\">W zależności od wyboru bedzie można udzielić wyłacznie odpowiedzi tekstowej, wybrać wyłacznie jedna lub wiele z zdefiniowanych odpowiedzi podczas wypełnienia ankiety.</small>\n                          </div>\n                          <div class=\"form-row\" style=\"float: right;\">\n                            <label class=\"checkbox-container\" > Pytanie opcjonalne\n                                <input id=\"optional\" type='checkbox' formControlName=\"IsOptional\" >\n                                <span class=\"checkbox-checkmark\"></span>\n                            </label>\n                          </div>\n                      <div class=\"survey-body\" formArrayName = \"Answers\">\n                          <br style=\"clear:both\" />\n                          <div *ngFor=\"let answer of GetAnswers(question).controls; let j = index \" [formGroupName]=\"j\">\n                              <div class=\"input-group\">\n                                  <textarea maxlength=\"{{maxLengthOfTheAnswer}}\" appAutoResizeTextArea charactersPerLine=\"55\" type=\"text\" class=\"form-control\" formControlName=\"Answer\"\n                                   placeholder='Podaj treść odpowiedzi' aria-describedby=\"basic-addon2\" rows=\"1\"></textarea>\n                                 <div class=\"input-group-append\">\n                                   <button title=\"Usuń odpowiedź.\" (click)=\"deleteAnswer(question, j)\" class=\"cancel-button basic-icon-button\"\n                                    type=\"button\" ></button>\n                                   <button title=\"Dodaj odpowiedź.\" *ngIf=\"GetAnswers(question).length - 1 === j\"  (click)=\"addAnswer(GetAnswers(question))\"\n                                   class=\"add-button basic-icon-button\" type=\"button\" ></button>\n                                 </div>\n                                </div>\n                                <small class=\"text-danger\" *ngIf=\"answer.get('Answer').invalid && answer.get('Answer').touched\" >Pole odpowiedzi nie może pozostać puste.</small>\n                          </div>\n                      </div>\n                   </div>\n              </div>\n          </div>\n      </form>\n    </div>\n  </div>\n","import { Question } from './../../shared/Models/question';\nimport { ValidationsOptions } from './../../shared/validators/validations-options';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { Survey } from './../../shared/Models/survey';\nimport { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AnswerType } from '../../shared/Models/answer-type.enum';\nimport { SurveyService } from '../../shared/services/survey.service';\nimport { Router } from '@angular/router';\nimport { catchError, finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-create-new-survey',\n  templateUrl: './create-new-survey.component.html',\n  styleUrls: ['./create-new-survey.component.css']\n})\nexport class CreateNewSurveyComponent implements OnInit, OnDestroy {\n\n  options = AnswerType;\n  subs: Subscription[] = [];\n  @Input()\n  survey: Survey; // model ankiety\n  @Input()\n  link: string; // identyfikagor ankiety\n  isRequesting = false;\n  editingMode = false;\n  surveyWasEdited = false;\n  surveyForm: FormGroup;\n  validationsOptions: any;\n\n  maxLengthOfTheAnswer = ValidationsOptions.MaxLengthOfTheAnswer;\n  surveyDescriptionMmaxLength = ValidationsOptions.SurveyDescriptionMmaxLength;\n  surveyNameMmaxLength = ValidationsOptions.SurveyNameMmaxLength;\n  surveyQuestionMmaxLength = ValidationsOptions.SurveyQuestionMmaxLength;\n\n  constructor(private formBuilder: FormBuilder, private surveyService: SurveyService, private router: Router) {\n  }\n\n  // getters\n  get Questions() {\n    return this.surveyForm.get('Questions') as FormArray;\n  }\n\n  get Name() {\n    return this.surveyForm.get('Name');\n  }\n\n  get Description() {\n    return this.surveyForm.get('Description');\n  }\n\n  ngOnInit() {\n    // jesi to jest nowa ankieta zaicjalizuj forme postawowymi wartosciami\n    if ( this.survey === undefined) {\n      this.surveyForm = this.formBuilder.group({\n        Name: ['', [Validators.required]],\n        Description: ['', [Validators.required]],\n        Questions: this.formBuilder.array([])\n      });\n      this.addQuestion();\n    } else { // kiesy jest to edycja aniety zapelnij forme danymi\n      this.editingMode = true;\n      this.surveyForm = this.formBuilder.group({\n        Name: [this.survey.Name, [Validators.required]],\n        Description: [this.survey.Description, [Validators.required]],\n        Questions: this.formBuilder.array([])\n      });\n      this.survey.Questions.forEach( item => {\n        const answers = [];\n        if ( item.AnswerType != AnswerType.Tekstowy) {\n          item.Answers.forEach( answer => {\n            answers.push(this.formBuilder.group({\n              Answer: [answer, [Validators.required]]\n            }));\n          });\n        }\n        const question = this.formBuilder.group({\n          Query: [item.Query, [Validators.required]],\n          AnswerType: item.AnswerType.toString(),\n          Answers: this.formBuilder.array(answers),\n          IsOptional: [item.IsOptional]\n        });\n       this.Questions.push(question);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach( sub => sub.unsubscribe());\n  }\n  /**\n   * Dodaj now pytanie ankiety\n   */\n  addQuestion(): void {\n    this.surveyWasEdited = true;\n    const question = this.formBuilder.group({\n      Query: ['', [Validators.required]],\n      AnswerType: AnswerType.Jednokrotny.toString(),\n      Answers: this.formBuilder.array([]),\n      IsOptional: [false]\n    });\n    this.addAnswer(question.get('Answers') as FormArray);\n    this.Questions.push(question);\n  }\n\n  /**\n   * Usuń wybrane pytanie\n   * @param index Nr pytania - 1\n   */\n  remoweQuestionAt(index: number): void {\n    if ( this.Questions.length > 1) {\n      this.surveyWasEdited = true;\n      this.Questions.removeAt(index);\n    }\n  }\n\n  /**\n   * Usuń ostatnie pytanie\n   */\n  remoweQuestion(): void {\n    if ( this.Questions.length > 1) {\n      this.surveyWasEdited = true;\n      this.Questions.removeAt(this.Questions.length - 1);\n    }\n  }\n\n  /**\n   * Dodaj nowe pytanie na koniec bloku\n   * @param answers\n   */\n  addAnswer(answers: FormArray): void {\n    this.surveyWasEdited = true;\n    const answer = this.formBuilder.group({\n      Answer: ['', [Validators.required]]\n    });\n    answers.push(answer);\n  }\n\n  /**\n   * Pobierz kolekcje odpwoiedzi danego pytania\n   * @param question Okreslone pytanie ankiety z formy\n   */\n  GetAnswers(question: FormGroup): FormArray {\n    return question.get('Answers') as FormArray;\n  }\n\n  /**\n   * Usuń wybrana odpowiedz\n   * @param question Okreslone pytanie ankiety z formy\n   * @param index nr pytania\n   */\n  deleteAnswer(question: FormGroup, index: number) {\n    const answers =  this.GetAnswers(question);\n    if ( answers.length > 1) {\n      this.GetAnswers(question).removeAt(index);\n    }\n  }\n\n  /**\n   * Obsługa zdarzenia zmiany tpya pytania przez input select\n   * @param question wyrane pytanei z formy\n   */\n  onSelectChange(question: FormGroup) {\n   this.surveyWasEdited = true;\n   const answerType = question.get('AnswerType').value;\n   const answers = this.GetAnswers(question);\n   if ( AnswerType.Tekstowy == answerType) {\n     const length = answers.length;\n     for ( let i = length - 1; i >= 0; i-- ) {\n       answers.removeAt(i);\n     }\n   } else {\n    if ( answers.length === 0) {\n      this.addAnswer(answers);\n    }\n   }\n  }\n\n  onSubmit() {\n    if ( this.editingMode && this.surveyWasEdited) {\n      if (!confirm('Zmiana struktury ankiety spowoduje utrate dotykczas zebranych danych. Jesteś tego pewien?')) {\n        return;\n      }\n    }\n      const questions = [];\n      for (let i = 0; i < this.surveyForm.value.Questions.length; i++) {\n        const tmp = new Question({\n          AnswerType: this.surveyForm.value.Questions[i].AnswerType,\n          IsOptional: this.surveyForm.value.Questions[i].IsOptional,\n          Query: this.surveyForm.value.Questions[i].Query,\n          QuestionNumber: i + 1,\n        });\n        if ( tmp.AnswerType != AnswerType.Tekstowy) {\n         const answers = [];\n         this.surveyForm.value.Questions[i].Answers.forEach(answer => {\n           answers.push(answer.Answer);\n         });\n         tmp.Answers = answers;\n        }\n        questions.push(tmp);\n      }\n      const survey = new Survey({\n        Name: this.surveyForm.value.Name,\n        Description: this.surveyForm.value.Description,\n        Questions: questions\n      });\n      this.isRequesting = true;\n      if ( this.editingMode) {\n        this.surveyService.editSurvey(this.link, survey.toJSON(), this.surveyWasEdited )\n        .pipe(catchError(this.surveyService.handleErrors), finalize( () => this.isRequesting = false)).subscribe(\n          res => {\n            if (res) { // kiedy udalo sie utworzyc ankiete\n              alert('Twoja ankieta została edytowana!');\n              this.router.navigate(['/user/surveys']);\n            }\n          },\n          error => { // kiedy nie udalo sie utworzc ankiety na serwerze\n            alert(error);\n          });\n      } else {\n        this.surveyService.createSurvey(survey.toJSON()).pipe(catchError(this.surveyService.handleErrors),\n         finalize( () => this.isRequesting = false)).subscribe(\n          res => {\n            if (res) { // kiedy udalo sie utworzyc ankiete\n              alert('Twoja ankieta została utworzona!');\n              this.router.navigate(['/user/surveys']);\n            }\n          },\n          error => { // kiedy nie udalo sie utworzc ankiety na serwerze\n            alert(error);\n          });\n      }\n  }\n}\n","<ng-container *ngIf = ' isRequesting'>\n  <app-loader></app-loader>\n</ng-container>\n<ng-container *ngIf = '!isRequesting && survey !== undefined'>\n  <app-create-new-survey [survey]='survey' [link]='link'></app-create-new-survey>\n</ng-container>\n<ng-container *ngIf = '!isRequesting && survey === undefined'>\n    Bład: {{ error}}\n</ng-container>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Survey } from '../../shared/Models/survey';\nimport { SurveyService } from '../../shared/services/survey.service';\nimport { Subscription } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-edit-survey',\n  templateUrl: './edit-survey.component.html',\n  styleUrls: ['./edit-survey.component.css']\n})\nexport class EditSurveyComponent implements OnInit, OnDestroy {\n  survey: Survey;\n  isRequesting: boolean;\n  link: string; // identyfikator ankiety\n  subs: Array<Subscription> = [];\n  error: string;\n\n  constructor(private route: ActivatedRoute, private surveyService: SurveyService) {\n    this.subs.push(surveyService.isRequestingObservable.subscribe(isRequesting => this.isRequesting = isRequesting));\n  }\n\n  ngOnInit() {\n    // pobranie zmiennej z sciezki\n    this.subs.push(this.route.queryParams.subscribe(params => this.link = params.link));\n    // pobranie ankiety\n    this.subs.push(this.surveyService.getSurvey(this.link)\n      .pipe(catchError(this.surveyService.handleErrors)).subscribe(res => {\n        this.survey = res as Survey;\n      },\n        error => {\n          this.error = error;\n        }));\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","<ng-container *ngIf = 'isRequesting'>\n  <app-loader></app-loader>\n</ng-container>\n<ng-container *ngIf = '!isRequesting && survey !== undefined && result !== undefined'>\n  <div id=\"row\">\n      <h3>Generuj raport dla {{survey.Name}}</h3>\n      <div>\n          <strong >Wybierz pytania ktore maja byc uzwglednione w raporcie</strong>\n          <div id=\"choose-questions\">\n            <ng-container *ngFor=\"let item of survey.Questions\">\n              <label class=\"checkbox-container\" > <p>{{item.Query}}</p>\n                  <input type=\"checkbox\" (change)=\"onCheckboxChange(item)\">\n                  <span class=\"checkbox-checkmark\"></span>\n              </label>\n            </ng-container>\n          </div>\n      </div>\n      <div id=\"content\" #content>\n        <h4>Raport dla Ankiety:</h4>\n        <h4>{{survey.Name}}</h4>\n        <ng-container *ngFor=\"let question of questionToReport\">\n          <div>\n            <h5>{{question.Query}}</h5>\n              <ng-container *ngIf=\"question.AnswerType !== 3\">\n                <p>W sumie na pytanie udzielono {{geTotalQuestionScore(question)}} odpowiedzi.</p>\n                <ng-container *ngFor=\"let answer of question.Answers; let i = index\">\n                  <p> {{answer}}</p>\n                  <p> Udzielono {{getScore(question.QuestionNumber, i + 1)}} odpowiedzi.</p>\n              </ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"question.AnswerType === 3\">\n                <p>Łącznie na pytanie udzielono {{geTotalQuestionScore(question)}} odpowiedzi.</p>\n                <ng-container *ngFor=\"let answer of getAnswers(question.QuestionNumber)\">\n                  <p> {{answer}} </p>\n              </ng-container>\n            </ng-container>\n          </div>\n        </ng-container>\n      </div>\n      <button id=\"generateReport\" class=\"common-button\" (click)=\"generateReport()\">Pobierz PDF</button>\n  </div>\n</ng-container>\n<ng-container *ngIf = '!isRequesting && ( survey === undefined || result === undefined )'>\n    Bład: {{ error}}\n</ng-container>\n","import { Question } from './../../shared/Models/question';\nimport { SurveyService } from './../../shared/services/survey.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { SurveyResults } from './../../shared/Models/survey-results';\nimport { Survey } from './../../shared/Models/survey';\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { finalize, catchError } from 'rxjs/operators';\nimport * as jspdf from 'jspdf';\nimport { AnswerType } from '../../shared/Models/answer-type.enum';\n\nimport * as pdfMake from 'pdfmake/build/pdfmake';\nimport * as pdfFonts from 'pdfmake/build/vfs_fonts';\n\n@Component({\n  selector: 'app-generate-survey-report',\n  templateUrl: './generate-survey-report.component.html',\n  styleUrls: ['./generate-survey-report.component.css']\n})\nexport class GenerateSurveyReportComponent implements OnInit, OnDestroy {\n  survey: Survey;\n  result: SurveyResults;\n  isRequesting: boolean;\n  link: string; // identyfikator ankiety\n  subs: Array<Subscription> = [];\n  error: string;\n  questionToReport: Question[] = [];\n  @ViewChild('content')\n  content: ElementRef;\n\n  constructor(private route: ActivatedRoute, private surveyService: SurveyService) {\n  }\n\n  ngOnInit() {\n    this.isRequesting = true;\n    // pobranie zmiennej z sciezki\n    this.subs.push(this.route.queryParams.subscribe(params => this.link = params.link));\n    // pobranie ankiety\n    this.subs.push(this.surveyService.getSurvey(this.link)\n      .pipe(catchError(this.surveyService.handleErrors), finalize(() => this.onCompleting()))\n      .subscribe(res => {\n        this.survey = res as Survey;\n      },\n        error => {\n          this.error += error;\n          this.isRequesting = false;\n        }));\n    // pobranie wynikow ankiety\n    this.subs.push(this.surveyService.getSurveyResults(this.link)\n      .pipe(catchError(this.surveyService.handleErrors), finalize(() => this.onCompleting()))\n      .subscribe(res => {\n        this.result = res as SurveyResults;\n      },\n        error => {\n          this.error += error;\n          this.isRequesting = false;\n        }));\n  }\n  ngOnDestroy(): void {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Sprawdza czy dane zostały juz pobrane\n   */\n  onCompleting() {\n    if (this.survey !== undefined && this.result !== undefined) {\n      this.isRequesting = false;\n    }\n  }\n\n  onCheckboxChange(value: Question) {\n    const index = this.questionToReport.lastIndexOf(value);\n    if (index === -1) {\n      this.questionToReport.push(value);\n    } else {\n      this.questionToReport.splice(index, 1);\n    }\n  }\n\n  geTotalQuestionScore(question: Question): number {\n    const results = this.result.results.filter(score => score.questionNumber === question.QuestionNumber);\n    let totalScore = 0;\n    if (question.AnswerType == AnswerType.Tekstowy) {\n      totalScore = results[0].answerResults.length;\n    } else {\n      results.forEach(result => totalScore += result.answerCounter);\n    }\n    return totalScore;\n  }\n  getScore(questionNumber: number, aswerNumber: number): number {\n    const result = this.result.results.filter(score => score.questionNumber === questionNumber\n      && score.answerNumber === aswerNumber)[0];\n    if (result !== undefined) {\n      return result.answerCounter;\n    } else {\n      return 0;\n    }\n  }\n\n  getAnswers(questionNumber: number): string[] {\n    const result = this.result.results.filter(score => score.questionNumber === questionNumber)[0];\n    return result.answerResults;\n  }\n\n  generateReport() {\n    const pdfContent = [];\n    // header\n    pdfContent.push({ text: 'Raport dla Ankiety:', style: ['header', 'center'] });\n    pdfContent.push({ text: this.survey.Name, style: ['header', 'center'] });\n    // body, przeiteruj pytania ktore maja trafic do raportu\n    this.questionToReport.forEach(question => {\n      // nagłowek sekcji kazdego pytania\n      pdfContent.push({ text: question.Query, style: ['query'] });\n      pdfContent.push({\n        text: 'W na pytanie udzielono łącznie ' + this.geTotalQuestionScore(question) + ' odpowiedzi.',\n        style: ['queryCount']\n      });\n      // ciało sekcji\n      if (question.AnswerType != AnswerType.Tekstowy) { // przeiteruj wszystkie odpowiedzi\n        for (let i = 0; i < question.Answers.length; i++) {\n          pdfContent.push({ text: question.Answers[i], margin: [10, 0, 0, 10] }); // dodaj tresc odpowiedzi\n          pdfContent.push({\n            text: ' Udzielono ' + this.getScore(question.QuestionNumber, i + 1) + ' odpowiedzi.',\n            style: ['body']\n          });\n        }\n      } else {\n        this.getAnswers(question.QuestionNumber).forEach(answer => {\n          pdfContent.push({ text: answer, style: ['body'] }); // dodaj tresc udzielonej odpowiedzi na pytanie\n        });\n      }\n    });\n\n    pdfMake.vfs = pdfFonts.pdfMake.vfs;\n    const pdf = {\n      content: pdfContent,\n      styles: {\n        center: {\n          alignment: 'center'\n        },\n        header: {\n          fontSize: 17,\n          bold: true,\n          margin: [0, 5, 0, 20]\n        },\n        query: {\n          fontSize: 14,\n          bold: true,\n          margin: [0, 20, 0, 15]\n        },\n        queryCount: {\n          fontSize: 12,\n          bold: true,\n          margin: [0, 20, 0, 20]\n        },\n        body: {\n          fontSize: 11,\n          margin: [10, 0, 0, 10]\n        }\n      }\n    };\n    pdfMake.createPdf(pdf).download('raport.pdf');\n  }\n}\n","<p>Ty ma byc tekst co i jak robic jakies przywitanie</p>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","<div class=\"mange-survey\">\n  <div>\n      <h4>Nazwa Ankiety: </h4>\n      <p>{{data.name}}</p>\n  </div>\n    <div>\n      <ul>\n        <li><button class=\"common-button\" [disabled] = 'isRequesting' (click)='editSurvey()'>Edytuj Ankiete</button></li>\n        <li><button class=\"common-button\" [disabled] = 'isRequesting' (click)='remoweSurvey()'>Usun ankiete</button></li>\n        <li><button class=\"common-button\" [disabled] = 'isRequesting' (click)='fillSurvey()'>Wypełnij ankiete</button></li>\n        <li><button class=\"common-button\" [disabled] = 'isRequesting' (click)='showSurveyResult()'>Zobacz wyniki ankiety</button></li>\n        <li><button class=\"common-button\" [disabled] = 'isRequesting' (click)='generateSurveyReport()'>Generuj raport z wynikow ankiety</button></li>\n        <li><app-send-email-invites [link]=\"data.link\"></app-send-email-invites></li>\n      </ul>\n    </div>\n    <div>\n      <strong>Link do ankiety: <a href=\"{{shareSurvey}}\">Link </a></strong>\n      <div class='text-danger'>{{errorMsg}}</div>\n    </div>\n</div>\n","import { SurveyService } from './../../shared/services/survey.service';\nimport { ConfigService } from './../../shared/utilities/config.service';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { Component, Input, Output, EventEmitter, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-manage-survey',\n  templateUrl: './manage-survey.component.html',\n  styleUrls: ['./manage-survey.component.css']\n})\nexport class ManageSurveyComponent implements OnDestroy, OnInit {\n  @Input()\n  data: { name: string, link: string };\n  @Output() close = new EventEmitter();\n  isRequesting: boolean;\n  subscription: Subscription;\n  errorMsg: string;\n  shareSurvey: string;\n\n  constructor(private surveyService: SurveyService, private router: Router, private configService: ConfigService) {\n     this.subscription = surveyService.isRequestingObservable.subscribe(isRequesting => this.isRequesting = isRequesting);\n  }\n\n  ngOnInit(): void {\n    this.shareSurvey = this.configService.getApURI() + '/survey?link=' + this.data.link;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Sluzy do usuwania wybranej ankiety z serwisu\n   */\n  remoweSurvey(): void {\n    if (confirm('Czy na pewno chcesz usunąć ankiete ?')) {\n      this.surveyService.remoweSurvey(this.data.link).pipe(catchError(this.surveyService.handleErrors)).subscribe(result => {\n        if (result) {\n          this.onClose();\n        }\n      }, error => {\n        this.errorMsg = error;\n      });\n    }\n  }\n\n  /**\n   * Pozbadz sie tego komponetu\n   */\n  onClose(): void {\n    // daj znac ze komponent ma zostac zniszczony\n    this.close.emit(null);\n  }\n\n  /**\n   * Edytuj wybrana ankiete\n   * Przeniesie do nowego widoku\n   */\n  editSurvey(): void {\n    this.router.navigate(['/user/edit'], { queryParams: { link: this.data.link } });\n  }\n\n  fillSurvey(): void {\n    this.router.navigate(['/survey'], { queryParams: { link: this.data.link } });\n  }\n\n  showSurveyResult(): void {\n    this.router.navigate(['/user/results'], { queryParams: { link: this.data.link } });\n  }\n\n  generateSurveyReport(): void {\n    this.router.navigate(['/user/report'], { queryParams: { link: this.data.link } });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-1\">\n    <div class=\"sidenav\">\n      <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/user/create\">Stworz ankiete</a>\n      <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/user/surveys\">Twoje Ankiety</a>\n    </div>\n  </div>\n  <div class=\"col-sm-6 col-lg-10\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { UserService } from './../../shared/services/user.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.css']\n})\nexport class RootComponent implements OnInit {\n  constructor(private userService: UserService) {\n    // sprawdzenie czy po dluzszym czasie token JWT jest ciaglw wazny\n    userService.IsAuthorized();\n  }\n\n  ngOnInit() {\n  }\n}\n","<!-- Button to Open the Modal -->\n<button class=\"common-button\" type=\"button\" data-toggle=\"modal\" data-target=\"#myModal\" id=\"invite\">\n Zaproś do ankiety.\n</button>\n\n<!-- The Modal -->\n<div class=\"modal\" id=\"myModal\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n\n      <!-- Modal Header -->\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Wyślij zaproszenia emial do ankiety.</h4>\n        <button class=\"common-button\" type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n      </div>\n\n      <!-- Modal body -->\n      <div class=\"modal-body\">\n        <ul>\n          <ng-container *ngFor=\" let item of emails; let i = index\">\n            <li><button class=\"common-button\" [disabled]=\"isRequesting\" (click)=\"remowe(i)\">{{item}}</button></li>\n          </ng-container>\n        </ul>\n        <div class=\"text-danger\" *ngIf=\"!validEmail\">\n          Podaj poprawny adres email\n        </div>\n      </div>\n\n      <!-- Modal footer -->\n      <div class=\"modal-footer\">\n        <div>\n          <input type=\"text\" [(ngModel)] = \"email\">\n          <button class=\"common-button\" [disabled]=\"isRequesting\" (click)=\"addEmail()\" >Dodaj</button>\n          <button class=\"common-button\" [disabled]=\"isRequesting || emails.length === 0\" type=\"button\" (click)=\"sendEmailsInvites()\">Wyślij</button>\n          <button class=\"common-button\" type=\"button\" data-dismiss=\"modal\">Zamknij</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { SurveyService } from './../../shared/services/survey.service';\nimport { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-send-email-invites',\n  templateUrl: './send-email-invites.component.html',\n  styleUrls: ['./send-email-invites.component.css']\n})\nexport class SendEmailInvitesComponent implements OnInit, OnDestroy {\n  @Input()\n  link: string;\n  email: string;\n  emails = [];\n  validEmail = true;\n  isRequesting: boolean;\n  subs: Subscription[] = [];\n\n  constructor(private surveyService: SurveyService) {\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Dodaj email do listy\n   */\n  addEmail() {\n    // walidacja\n    this.validEmail = new RegExp('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$').test(this.email);\n\n    if (this.validEmail) {\n      this.emails.push(this.email);\n      this.email = '';\n    }\n  }\n\n  /**\n   * Usuń email z listy\n   */\n  remowe(number: number) {\n    this.emails.splice(number, 1);\n  }\n\n  sendEmailsInvites() {\n    if (this.emails.length === 0) {\n      return;\n    }\n    this.isRequesting = true;\n    this.subs.push(this.surveyService.sendEmailsInvites(this.emails, this.link)\n    .pipe(catchError(this.surveyService.handleErrors), finalize( () => this.isRequesting = false ))\n      .subscribe(\n        res => {\n          alert('Wysłano zaproszenia do ankiety!');\n        },\n        error => {\n          alert(error);\n        }));\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach(sub => sub.unsubscribe);\n  }\n}\n","  <!-- Jesli to nie jest pytanie tekstowe -->\n<ng-container *ngIf=\"question.AnswerType !== 3\">\n  <div class=\"result-row\">\n    <app-doughnut-chart [title]=\"question.Query\" [doughnutChartLabels]=\"question.Answers\" [doughnutChartData]=\"results\"></app-doughnut-chart>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"question.AnswerType === 3\">\n  <div class=\"result-row\">\n    <app-page-viewer [title]=\"question.Query\" [listElements]=\"surveyResults[0].answerResults\"></app-page-viewer>\n  </div>\n</ng-container>\n","import { SurveyResult } from './../../shared/Models/survey-results';\nimport { Question } from './../../shared/Models/question';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { AnswerType } from '../../shared/Models/answer-type.enum';\n\n@Component({\n  selector: 'app-show-results',\n  templateUrl: './show-results.component.html',\n  styleUrls: ['./show-results.component.css']\n})\nexport class ShowResultsComponent implements OnInit {\n  @Input()\n  question: Question;\n  @Input()\n  surveyResults: SurveyResult[];\n  results: number[];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    if (this.question.AnswerType.toString() !== AnswerType.Tekstowy.toString()) {\n      this.results = [];\n      // posortuj wyniki\n      this.surveyResults.sort((a, b) => {\n        if (a.answerNumber < b.answerNumber) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n      // nastepnie dodaj je do nowej tablicy aby potem przekaz je do wykresu\n      this.surveyResults.forEach(item => this.results.push(item.answerCounter));\n    }\n  }\n}\n","<ng-container *ngIf = 'isRequesting'>\n  <app-loader></app-loader>\n</ng-container>\n<ng-container *ngIf = '!isRequesting && survey !== undefined && result !== undefined'>\n  <div id=\"survey-results-header\">\n      <h1>Wyniki dla ankiety: </h1>\n      <h1>{{survey.Name}}</h1>\n  </div>\n  <ng-container *ngFor=\" let item of survey.Questions\">\n    <app-show-results [question]=\"item\" [surveyResults]=\"getQuestionResults(item.QuestionNumber)\"></app-show-results>\n  </ng-container>\n</ng-container>\n<ng-container *ngIf = '!isRequesting && ( survey === undefined || result === undefined )'>\n    Bład: {{ error}}\n</ng-container>\n","import { SurveyResults } from './../../shared/Models/survey-results';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\n\nimport { SurveyService } from '../../shared/services/survey.service';\nimport { Survey } from './../../shared/Models/survey';\n\n@Component({\n  selector: 'app-survey-results',\n  templateUrl: './survey-results.component.html',\n  styleUrls: ['./survey-results.component.css']\n})\nexport class SurveyResultsComponent implements OnInit, OnDestroy {\n  survey: Survey;\n  result: SurveyResults;\n  isRequesting: boolean;\n  link: string; // identyfikator ankiety\n  subs: Array<Subscription> = [];\n  error: string;\n\n  constructor(private route: ActivatedRoute, private surveyService: SurveyService) {\n  }\n\n  ngOnInit() {\n    this.isRequesting = true;\n    // pobranie zmiennej z sciezki\n    this.subs.push(this.route.queryParams.subscribe(params => this.link = params.link));\n    // pobranie ankiety\n    this.subs.push(this.surveyService.getSurvey(this.link)\n      .pipe(catchError(this.surveyService.handleErrors), finalize(() => this.onCompleting()))\n      .subscribe(res => {\n        this.survey = res as Survey;\n      },\n        error => {\n          this.error += error;\n          this.isRequesting = false;\n        }));\n    // pobranie wynikow ankiety\n    this.subs.push(this.surveyService.getSurveyResults(this.link)\n      .pipe(catchError(this.surveyService.handleErrors), finalize(() => this.onCompleting()))\n      .subscribe(res => {\n        this.result = res as SurveyResults;\n      },\n        error => {\n          this.error += error;\n          this.isRequesting = false;\n        }));\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Sprawdza czy dane zostały juz pobrane\n   */\n  onCompleting() {\n    if (this.survey !== undefined && this.result !== undefined) {\n      this.isRequesting = false;\n    }\n  }\n\n  getQuestionResults(questionNumber: number) {\n    return this.result.results.filter(item => item.questionNumber === questionNumber);\n  }\n}\n","<ng-container *ngIf = 'isDownloading'>\n    <app-loader></app-loader>\n</ng-container>\n<ng-container *ngIf = '!isDownloading && surveys.length > 0;'>\n    <ng-container *ngFor=\"let item  of surveys\">\n      <app-manage-survey [data]= 'item' (close)='remowe(item)' ></app-manage-survey>\n    </ng-container>\n</ng-container>\n<ng-container *ngIf = '!isDownloading && surveys.length === 0'>\n   Nie posiadasz w tej chwili żadnych ankiet\n</ng-container>\n","import { Subscription } from 'rxjs/internal/Subscription';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SurveyService } from '../../shared/services/survey.service';\n\n@Component({\n  selector: 'app-user-surveys',\n  templateUrl: './user-surveys.component.html',\n  styleUrls: ['./user-surveys.component.css']\n})\nexport class UserSurveysComponent implements OnInit, OnDestroy {\n  surveys: Array<{ name: string, link: string }>;\n  isDownloading: boolean;\n  subs: Array<Subscription> = new Array<Subscription>();\n\n  constructor(private surveyService: SurveyService) {\n    this.subs.push(surveyService.isRequestingObservable.subscribe(isDownloading => this.isDownloading = isDownloading));\n    // pobierz ankiety uzytkownika\n    this.subs.push(this.surveyService.getUserSurveys()\n      .subscribe(res => this.surveys = res));\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Usuwa wybrany element z tablicy surveys\n   * @param obj element do usuniecia\n   */\n  remowe(obj: any) {\n    const index = this.surveys.indexOf(obj);\n    if (index !== -1) {\n      this.surveys.splice(index, 1);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { ManageSurveyComponent } from './manage-survey/manage-survey.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ComponentLoaderService } from './../shared/services/component-loader.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RootComponent } from './root/root.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from '../auth.guard';\nimport { routing } from './user.routing';\nimport { SurveyService } from '../shared/services/survey.service';\nimport { UserSurveysComponent } from './user-surveys/user-surveys.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { EditSurveyComponent } from './edit-survey/edit-survey.component';\nimport { SurveyResultsComponent } from './survey-results/survey-results.component';\nimport { GenerateSurveyReportComponent } from './generate-survey-report/generate-survey-report.component';\nimport { CreateNewSurveyComponent } from './create-new-survey/create-new-survey.component';\nimport { SendEmailInvitesComponent } from './send-email-invites/send-email-invites.component';\nimport { ShowResultsComponent } from './show-results/show-results.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    routing,\n    SharedModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    FormsModule\n  ],\n  declarations: [RootComponent, HomeComponent, UserSurveysComponent, EditSurveyComponent, SendEmailInvitesComponent,\n    SurveyResultsComponent, GenerateSurveyReportComponent, CreateNewSurveyComponent, ManageSurveyComponent, ShowResultsComponent ],\n  providers: [AuthGuard, ComponentLoaderService, SurveyService]\n})\nexport class UserModule { }\n","<div class=\"outer\">\n  <div class=\"middle\">\n    <div class=\"inner\">\n        <h2>Zmień swój adres email.</h2>\n          <form id=\"changeEmailForm\" [formGroup]=\"changeEmailForm\" (ngSubmit)=\"onSubmit(changeEmailForm.value)\">\n              <mat-form-field>\n                <input matInput placeholder=\"Podaj nowy adres email\" formControlName=\"newEmail\" required type=\"email\">\n                <mat-error *ngIf=\"newEmail.hasError('required') && newEmail.touched \">\n                    Pole nie może być puste.\n                  </mat-error>\n                  <mat-error *ngIf=\"newEmail.hasError('email') && newEmail.touched \">\n                     Nie poprawny format adresu email.\n                   </mat-error>\n              </mat-form-field>\n              <mat-error *ngIf=\"errors\">\n                  {{errors}}\n              </mat-error>\n              <button mat-raised-button type=\"submit\" [disabled]=\"changeEmailForm.invalid || isRequesting\">Zmień email</button>\n          </form>\n    </div>\n  </div>\n</div>\n","import { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserPanelService } from '../user-panel.service';\nimport { Subscription } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-change-email',\n  templateUrl: './change-email.component.html',\n  styleUrls: ['./change-email.component.css']\n})\nexport class ChangeEmailComponent implements OnInit, OnDestroy {\n  changeEmailForm: FormGroup;\n  errors: string;\n  sub: Subscription;\n  isRequesting = false;\n\n  get newEmail() { return this.changeEmailForm.get('newEmail'); }\n\n  constructor(private formBuilder: FormBuilder, private userPanelService: UserPanelService) { }\n\n  ngOnInit() {\n    this.changeEmailForm = this.formBuilder.group({\n      newEmail: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.sub !== undefined) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  onSubmit(value: any) {\n    this.isRequesting = true;\n    this.sub = this.userPanelService.sendChangeEmailLink({ email: value.newEmail })\n      .pipe(catchError(this.userPanelService.handleErrors), finalize(() => this.isRequesting = false))\n      .subscribe(\n        res => {\r\n          if (res) {\n            alert('Zobacz swoja skrzynke pocztową aby dokończyć zmiane adresu email.');\n          }\r\n        },\n        errors => this.errors = errors\n      );\n  }\n}\n","<div class=\"outer\">\n    <div class=\"middle\">\n      <div class=\"inner\">\n          <h2>Zmień swoje hasło.</h2>\n            <form id=\"changePasswordForm\" [formGroup]=\"changePasswordForm\" (ngSubmit)=\"onSubmit(changePasswordForm.value)\">\n                <mat-form-field>\n                  <input matInput placeholder=\"Podaj nowe hasło\" formControlName=\"newPassword\" required type=\"password\">\n                  <mat-error *ngIf=\"newPassword.hasError('required') && newPassword.touched \">\n                      Pole nie może być puste.\n                    </mat-error>\n                    <mat-error *ngIf=\"newPassword.hasError('minlength') && newPassword.touched \">\n                       Minimalna długość hasła wynosi {{passwordMinSize}} znaków.\n                     </mat-error>\n                </mat-form-field>\n                <mat-form-field>\n                  <input matInput placeholder=\"Potwierdz nowe hasło\" formControlName=\"matchNewPassword\" [errorStateMatcher]=\"matcher\" type=\"password\">\n                    <mat-error *ngIf=\"changePasswordForm.hasError('mismatch')\">\n                    Hasła nie są sobie równe.\n                  </mat-error>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Podaj obecne hasło\" formControlName=\"oldPassword\" required type=\"password\">\n                    <mat-error *ngIf=\"oldPassword.hasError('required') && oldPassword.touched \">\n                        Pole nie może być puste.\n                      </mat-error>\n                      <mat-error *ngIf=\"oldPassword.hasError('minlength') &&oldPassword.touched \">\n                         Minimalna długość hasła wynosi {{passwordMinSize}} znaków.\n                       </mat-error>\n                  </mat-form-field>\n                  <mat-error *ngIf=\"errors\">\n                      {{errors}}\n                  </mat-error>\n                  <button mat-raised-button type=\"submit\" [disabled]=\"changePasswordForm.invalid || isRequesting\">Zmień hasło</button>\n              </form>\n      </div>\n    </div>\n</div>\n","import { UserPanelService } from './../user-panel.service';\nimport { ValidationsOptions } from './../../shared/validators/validations-options';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl, ValidatorFn, ValidationErrors, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { UserService } from '../../shared/services/user.service';\nimport { catchError, finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\n    const invalidParent = !!(control && control.parent && control.parent.invalid && control.parent.dirty);\n\n    return (invalidCtrl || invalidParent);\n  }\n}\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnDestroy {\n  changePasswordForm: FormGroup;\n  matcher = new MyErrorStateMatcher();\n  isRequesting = false;\n  errors: string;\n  sub: Subscription;\n\n  passwordMinSize = ValidationsOptions.RequiredPasswordLength;\n  get newPassword() { return this.changePasswordForm.get('newPassword'); }\n  get matchNewPassword() { return this.changePasswordForm.get('matchNewPassword'); }\n  get oldPassword() { return this.changePasswordForm.get('oldPassword'); }\n\n  constructor(private formBuilder: FormBuilder, private userService: UserService,\n    private userPanelService: UserPanelService, private router: Router) {\n    this.changePasswordForm = this.formBuilder.group({\n      newPassword: ['', [Validators.required, Validators.minLength(this.passwordMinSize)]],\n      matchNewPassword: ['', [Validators.required]],\n      oldPassword: ['', [Validators.required, Validators.minLength(this.passwordMinSize)]]\n    }, { validator: this.checkPasswords });\n  }\n\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    const pass = group.controls.newPassword.value;\n    const confirmPass = group.controls.matchNewPassword.value;\n\n    return pass === confirmPass ? null : { mismatch: true };\n  }\n\n  onSubmit(value: any) {\n    this.isRequesting = true;\n    this.sub = this.userPanelService.changePassword({ currentPassword: value.oldPassword, newPassword: value.newPassword })\n      .pipe(catchError(this.userService.handleErrors), finalize(() => this.isRequesting = false))\n      .subscribe(\n        res => {\r\n          if (res) {\n            this.userService.logout();\n            this.router.navigate(['/login']);\n          }\r\n        },\n        errors => this.errors = errors\n      );\n  }\n\n  ngOnDestroy() {\n    if (this.sub !== undefined) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","<div class=\"outer\">\n  <div class=\"middle\">\n    <div class=\"inner\">\n        <p *ngIf=\"isSuccessful\">\n            Twoj adres email został potwierdzony. Możesz się juz zalogować nowym adresem email!.\n          </p>\n          <p *ngIf=\"!isSuccessful && !errors\">\n            Trwa zmienianie adresu email.\n          </p>\n          <p *ngIf=\"!isSuccessful && errors\">\n              {{errors}}\n            </p>\n      </div>\n  </div>\n</div>\n","import { UserService } from './../../shared/services/user.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { UserPanelService } from '../user-panel.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-confirm-email-change',\n  templateUrl: './confirm-email-change.component.html',\n  styleUrls: ['./confirm-email-change.component.css']\n})\nexport class ConfirmEmailChangeComponent implements OnInit, OnDestroy {\n  subs: Subscription[] = [];\n  errors;\n  value: { newEmail: string, code: string };\n  isSuccessful = false;\n\n  constructor(private userPanelService: UserPanelService, private route: ActivatedRoute, private userService: UserService) {\n    console.log('weszło');\n  }\n\n  ngOnInit() {\n    this.subs.push(this.route.queryParams.subscribe(params => {\n      this.value = { newEmail: params.newemail, code: params.code };\n    }));\n    this.subs.push(this.userPanelService.changeEmail(this.value).pipe(catchError(this.userPanelService.handleErrors)).\n      subscribe(\n        res => {\n          this.isSuccessful = true;\n          this.userService.logout();\n        },\n        errors => this.errors = errors\n      ));\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","<div class=\"outer\">\n  <div class=\"middle\">\n    <div class=\"inner\">\n        <h2>Usuń swoje konto.</h2>\n        <form id=\"deleteAccountForm\" [formGroup]=\"deleteAccountForm\" (ngSubmit)=\"onSubmit(deleteAccountForm.value)\">\n          <mat-form-field>\n            <input matInput placeholder=\"Podaj swoje hasło\" formControlName=\"password\" required type=\"password\">\n            <mat-error *ngIf=\"password.hasError('required') && password.touched \">\n                Pole nie może być puste.\n              </mat-error>\n          </mat-form-field>\n          <mat-error *ngIf=\"errors\">\n            {{errors}}\n          </mat-error>\n          <button mat-raised-button type=\"submit\" [disabled]=\"deleteAccountForm.invalid || isRequesting\">Usuń swoje konto</button>\n        </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { UserService } from '../../shared/services/user.service';\nimport { UserPanelService } from '../user-panel.service';\nimport { Router } from '@angular/router';\nimport { catchError, finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-delete-account',\n  templateUrl: './delete-account.component.html',\n  styleUrls: ['./delete-account.component.css']\n})\nexport class DeleteAccountComponent implements OnInit, OnDestroy {\n  isRequesting = false;\n  errors: string;\n  sub: Subscription;\n  deleteAccountForm: FormGroup;\n\n  get password() { return this.deleteAccountForm.get('password'); }\n\n  constructor(private formBuilder: FormBuilder, private userService: UserService,\n    private userPanelService: UserPanelService, private router: Router) { }\n\n  ngOnInit() {\n    this.deleteAccountForm = this.formBuilder.group({\n      password: ['', [Validators.required]]\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.sub !== undefined) {\n      this.sub.unsubscribe();\n    }\n  }\n  onSubmit(value: any) {\n    if (confirm('Na pewno chcesz usunąć swoje konto w serwisie ?')) {\n      this.isRequesting = true;\n      this.sub = this.userPanelService.deleteAccount({ password: value.password }).pipe(\n        catchError(this.userService.handleErrors), finalize(() => this.isRequesting = false))\n        .subscribe(\n          res => {\n            this.userService.logout();\n            this.router.navigate(['/login']);\n          }, errors => this.errors = errors\n        );\n    }\n  }\n}\n","<div class=\"outer\">\n    <div class=\"middle\">\n      <div class=\"inner\">\n        <h1>\n          Witaj w panelu użytkownika.\n        </h1>\n        <p>\n          Żarządzaj swoim kontem z tego miejsca.\n        </p>\n      </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-sm-2\">\n      <div class=\"sidenav\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/settings/password\">Zmien hasło</a>\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/settings/email\">Zmien adres email</a>\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/settings/delete\">Usuń swoje konto</a>\n      </div>\n    </div>\n    <div class=\"col-sm-6 col-lg-10\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.css']\n})\nexport class RootComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import { SharedModule } from './../shared/shared.module';\nimport { UserPanelService } from './user-panel.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RootComponent } from './root/root.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { routing } from './user-panel.routing';\nimport { AuthGuard } from '../auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DeleteAccountComponent } from './delete-account/delete-account.component';\nimport { ChangeEmailComponent } from './change-email/change-email.component';\nimport { ConfirmEmailChangeComponent } from './confirm-email-change/confirm-email-change.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    routing,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  declarations: [RootComponent, ChangePasswordComponent, HomeComponent, DeleteAccountComponent, ChangeEmailComponent,\n    ConfirmEmailChangeComponent],\n  providers: [AuthGuard, UserPanelService]\n})\nexport class UserPanelModule { }\n","import { UserService } from './../shared/services/user.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ConfigService } from '../shared/utilities/config.service';\nimport { map } from 'rxjs/operators';\nimport { BaseService } from '../shared/services/base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserPanelService extends BaseService {\n  private baseUrl: string;\n\n  constructor(private userService: UserService, private http: HttpClient, private configService: ConfigService) {\n    super();\n    this.baseUrl = configService.getApiURI() + '/AccountManager';\n  }\n\n  changePassword(value: { currentPassword: string, newPassword: string }): Observable<boolean> {\n    // ustawienie nagłowka, token jest wymaganu do autoryzacji\n    const header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.userService.getAuthorizationToken() });\n    const body = JSON.stringify(value);\n\n    return this.http.post(this.baseUrl + '/ChangePassword', body,\n      { headers: header, observe: 'body', responseType: 'json' })\n      .pipe(\n        map((res => true)));\n  }\n\n  deleteAccount(value: { password: string }): Observable<boolean> {\n    const header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.userService.getAuthorizationToken() });\n    const body = JSON.stringify(value);\n\n    return this.http.post(this.baseUrl + '/DeleteUser', body,\n      { headers: header, observe: 'body', responseType: 'json' })\n      .pipe(\n        map((res => true)));\n  }\n\n  sendChangeEmailLink(value: { email: string }): Observable<boolean> {\n    const header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.userService.getAuthorizationToken() });\n    const body = JSON.stringify(value);\n\n    return this.http.post(this.baseUrl + '/GenerateChangeEmailToken', body,\n      { headers: header, observe: 'body', responseType: 'json' })\n      .pipe(\n        map((res => true)));\n  }\n\n  changeEmail(value: { newEmail: string, code: string }): Observable<boolean> {\n    const header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.userService.getAuthorizationToken() });\n    const body = JSON.stringify(value);\n\n    return this.http.post(this.baseUrl + '/ReplaceEmail', body,\n      { headers: header, observe: 'body', responseType: 'json' })\n      .pipe(\n        map((res => true)));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}